[
  {
    "_id": "603047a5c78ea3004b2fd5f0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetFundAccounting",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "GLB_US_ME_POS_10*.txt",
    "fileFormat": "csvPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/Chicago",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "isBusinessDay": true,
          "startDay": 10,
          "endOfOnSchedule": {
            "day": 10,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 15,
            "time": "18:00"
          },
          "endOfLate": {
            "day": 1,
            "time": "18:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetFundAccounting",
    "source": "SSFAGLB",
    "valuationDate": {
      "isExists": false,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSFA_CUSTODY",
      "securityIdType": "SSFA_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "TYPE",
        "originalColumnName": "TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "FUND_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler2",
        "originalColumnName": "FFC_IND"
      },
      {
        "columnOrdinal": 5,
        "columnName": "securityId",
        "originalColumnName": "ACCOUNT"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "ACCOUNT_DESC"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "BASIS_IND"
      },
      {
        "columnOrdinal": 8,
        "columnName": "accountCurrency",
        "originalColumnName": "CRNCY_CD_BASE"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler5",
        "originalColumnName": "CRNCY_CD_FIN"
      },
      {
        "columnOrdinal": 10,
        "columnName": "securityCurrency",
        "originalColumnName": "CRNCY_CD_LOC"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler6",
        "originalColumnName": "NAV_BAL_IND"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler7",
        "originalColumnName": "CD_DATE"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler8",
        "originalColumnName": "CD_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler9",
        "originalColumnName": "CD_BEG_BAL"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "CD_END_BAL_D_C"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "CD_END_BAL"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "PD_DATE"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler13",
        "originalColumnName": "PD_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler14",
        "originalColumnName": "PD_BEG_BAL"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler15",
        "originalColumnName": "PD_END_BAL_D_C"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler16",
        "originalColumnName": "PD_END_BAL"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler17",
        "originalColumnName": "PM_BEG_DATE"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler18",
        "originalColumnName": "PM_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler19",
        "originalColumnName": "PM_BEG_BAL"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler20",
        "originalColumnName": "PM_END_DATE"
      },
      {
        "columnOrdinal": 26,
        "columnName": "PM_END_BAL_D_C",
        "originalColumnName": "PM_END_BAL_D_C"
      },
      {
        "columnOrdinal": 27,
        "columnName": "PM_END_BAL",
        "originalColumnName": "PM_END_BAL"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler21",
        "originalColumnName": "PY_BEG_DATE"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler22",
        "originalColumnName": "PY_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler23",
        "originalColumnName": "PY_BEG_BAL"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler24",
        "originalColumnName": "PY_END_DATE"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler25",
        "originalColumnName": "PY_END_BAL_D_C"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler26",
        "originalColumnName": "PY_END_BAL"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler27",
        "originalColumnName": "NAV_DATE"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler28",
        "originalColumnName": "NAV_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 36,
        "columnName": "filler29",
        "originalColumnName": "NAV_BEG_BAL"
      },
      {
        "columnOrdinal": 37,
        "columnName": "filler30",
        "originalColumnName": "NAV_END_BAL_D_C"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler31",
        "originalColumnName": "NAV_END_BAL"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler32",
        "originalColumnName": "REAL_MEMO_IND"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler33",
        "originalColumnName": "AVG_ID_CST_IND"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5a0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "northernRetirementServices",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "NRS_POS_*.txt",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "America/Chicago",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "13:00"
          },
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "17:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "northernRetirementServices",
    "source": "NRS",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "NRS_CUSTODY_FUND",
      "securityIdType": "NRS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "ROW_TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler2",
        "originalColumnName": "HLD_ACCOUNT_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler3",
        "originalColumnName": "ACC_NAME"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler4",
        "originalColumnName": "AGP_REPORT_SEQUENCE"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountId",
        "originalColumnName": "AAL_ALIAS"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler5",
        "originalColumnName": "HLD_FUND_ID"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler6",
        "originalColumnName": "FND_NAME"
      },
      {
        "columnOrdinal": 9,
        "columnName": "securityId",
        "originalColumnName": "FAL_ALIAS"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler7",
        "originalColumnName": "FCU_CURRENCY_CODE"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler8",
        "originalColumnName": "REPORT_CURRENCY"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler9",
        "originalColumnName": "PERIOD_BEGIN"
      },
      {
        "columnOrdinal": 13,
        "columnName": "valuationDate",
        "originalColumnName": "PERIOD_END"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler10",
        "originalColumnName": "FPR_PRICE_DATE"
      },
      {
        "columnOrdinal": 15,
        "columnName": "price",
        "originalColumnName": "FPR_UNIT_PRICE"
      },
      {
        "columnOrdinal": 16,
        "columnName": "units",
        "originalColumnName": "HLD_UNITS"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler11",
        "originalColumnName": "UNIT_COST"
      },
      {
        "columnOrdinal": 18,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "HLD_MARKET_VALUE"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler12",
        "originalColumnName": "HLD_TOTAL_COST"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler13",
        "originalColumnName": "UNREALIZED_GAIN_LOSS"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler14",
        "originalColumnName": "FPR_UNIT_PRICE_MC"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler15",
        "originalColumnName": "UNIT_COST_MC"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler16",
        "originalColumnName": "HLD_MARKET_VALUE_MC"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler17",
        "originalColumnName": "HLD_TOTAL_COST_MC"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler18",
        "originalColumnName": "UNREALIZED_GAIN_LOSS_MC"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler19",
        "originalColumnName": "FPR_PRICE_DATE_ALT"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler20",
        "originalColumnName": "FPR_UNIT_PRICE_ALT"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler21",
        "originalColumnName": "HLD_MARKET_VALUE_ALT"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler22",
        "originalColumnName": "VALUED_FUND_FLAG"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler23",
        "originalColumnName": "CTC_NAME"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler24",
        "originalColumnName": "CTC_TITLE"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler25",
        "originalColumnName": "CTC_PHONE"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler26",
        "originalColumnName": "ACU_CURRENCY_CODE"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler27",
        "originalColumnName": "EXR_EXCHANGE_RATE"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler28",
        "originalColumnName": "SHOW_FOOTER_FLAG"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5a1",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetGlobalAdvisors",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "SSGA_POS_*.txt",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "01:00"
          },
          "endOfOnTime": {
            "time": "06:30"
          },
          "endOfLate": {
            "time": "07:30"
          },
          "startTime": "01:00",
          "endTime": "17:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetGlobalAdvisors",
    "source": "SSGA",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy HH:mm:ss"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSGA_CUSTODY",
      "securityIdType": "SSGA_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "ROW_TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler2",
        "originalColumnName": "HLD_ACCOUNT_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler3",
        "originalColumnName": "ACC_NAME"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler4",
        "originalColumnName": "AGP_REPORT_SEQUENCE"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountId",
        "originalColumnName": "AAL_ALIAS"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler5",
        "originalColumnName": "HLD_FUND_ID"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler6",
        "originalColumnName": "FND_NAME"
      },
      {
        "columnOrdinal": 9,
        "columnName": "securityId",
        "originalColumnName": "FAL_ALIAS"
      },
      {
        "columnOrdinal": 10,
        "columnName": "securityCurrency",
        "originalColumnName": "FCU_CURRENCY_CODE"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler7",
        "originalColumnName": "REPORT_CURRENCY"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler8",
        "originalColumnName": "PERIOD_BEGIN"
      },
      {
        "columnOrdinal": 13,
        "columnName": "valuationDate",
        "originalColumnName": "PERIOD_END"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler9",
        "originalColumnName": "FPR_PRICE_DATE"
      },
      {
        "columnOrdinal": 15,
        "columnName": "price",
        "originalColumnName": "FPR_UNIT_PRICE"
      },
      {
        "columnOrdinal": 16,
        "columnName": "units",
        "originalColumnName": "HLD_UNITS"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler10",
        "originalColumnName": "UNIT_COST"
      },
      {
        "columnOrdinal": 18,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "HLD_MARKET_VALUE"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler11",
        "originalColumnName": "HLD_TOTAL_COST"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler12",
        "originalColumnName": "UNREALIZED_GAIN_LOSS"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler13",
        "originalColumnName": "FPR_UNIT_PRICE_MC"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler14",
        "originalColumnName": "UNIT_COST_MC"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler15",
        "originalColumnName": "HLD_MARKET_VALUE_MC"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler16",
        "originalColumnName": "HLD_TOTAL_COST_MC"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler17",
        "originalColumnName": "UNREALIZED_GAIN_LOSS_MC"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler18",
        "originalColumnName": "FPR_PRICE_DATE_ALT"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler19",
        "originalColumnName": "FPR_UNIT_PRICE_ALT"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler20",
        "originalColumnName": "HLD_MARKET_VALUE_ALT"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler21",
        "originalColumnName": "VALUED_FUND_FLAG"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler22",
        "originalColumnName": "CTC_NAME"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler23",
        "originalColumnName": "CTC_TITLE"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler24",
        "originalColumnName": "CTC_PHONE"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler25",
        "originalColumnName": "ACU_CURRENCY_CODE"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler26",
        "originalColumnName": "EXR_EXCHANGE_RATE"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler27",
        "originalColumnName": "SHOW_FOOTER_FLAG"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy HH:mm:ss",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5a2",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetGlobalAdvisors",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "SSGA_POS3_*.txt",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "08:45"
          },
          "endOfOnTime": {
            "time": "09:30"
          },
          "endOfLate": {
            "time": "10:00"
          },
          "startTime": "08:45",
          "endTime": "17:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetGlobalAdvisors",
    "source": "SSGA",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy HH:mm:ss"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSGA_CUSTODY",
      "securityIdType": "SSGA_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "ROW_TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler2",
        "originalColumnName": "HLD_ACCOUNT_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler3",
        "originalColumnName": "ACC_NAME"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler4",
        "originalColumnName": "AGP_REPORT_SEQUENCE"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountId",
        "originalColumnName": "AAL_ALIAS"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler5",
        "originalColumnName": "HLD_FUND_ID"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler6",
        "originalColumnName": "FND_NAME"
      },
      {
        "columnOrdinal": 9,
        "columnName": "securityId",
        "originalColumnName": "FAL_ALIAS"
      },
      {
        "columnOrdinal": 10,
        "columnName": "securityCurrency",
        "originalColumnName": "FCU_CURRENCY_CODE"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler7",
        "originalColumnName": "REPORT_CURRENCY"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler8",
        "originalColumnName": "PERIOD_BEGIN"
      },
      {
        "columnOrdinal": 13,
        "columnName": "valuationDate",
        "originalColumnName": "PERIOD_END"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler9",
        "originalColumnName": "FPR_PRICE_DATE"
      },
      {
        "columnOrdinal": 15,
        "columnName": "price",
        "originalColumnName": "FPR_UNIT_PRICE"
      },
      {
        "columnOrdinal": 16,
        "columnName": "units",
        "originalColumnName": "HLD_UNITS"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler10",
        "originalColumnName": "UNIT_COST"
      },
      {
        "columnOrdinal": 18,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "HLD_MARKET_VALUE"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler11",
        "originalColumnName": "HLD_TOTAL_COST"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler12",
        "originalColumnName": "UNREALIZED_GAIN_LOSS"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler13",
        "originalColumnName": "FPR_UNIT_PRICE_MC"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler14",
        "originalColumnName": "UNIT_COST_MC"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler15",
        "originalColumnName": "HLD_MARKET_VALUE_MC"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler16",
        "originalColumnName": "HLD_TOTAL_COST_MC"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler17",
        "originalColumnName": "UNREALIZED_GAIN_LOSS_MC"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler18",
        "originalColumnName": "FPR_PRICE_DATE_ALT"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler19",
        "originalColumnName": "FPR_UNIT_PRICE_ALT"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler20",
        "originalColumnName": "HLD_MARKET_VALUE_ALT"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler21",
        "originalColumnName": "VALUED_FUND_FLAG"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler22",
        "originalColumnName": "CTC_NAME"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler23",
        "originalColumnName": "CTC_TITLE"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler24",
        "originalColumnName": "CTC_PHONE"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler25",
        "originalColumnName": "ACU_CURRENCY_CODE"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler26",
        "originalColumnName": "EXR_EXCHANGE_RATE"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler27",
        "originalColumnName": "SHOW_FOOTER_FLAG"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy HH:mm:ss",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5a3",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetTransferAgency",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "SS_MERCERMF_TA_POS_*.txt",
    "fileFormat": "fixedWidthDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "01:00"
          },
          "endOfOnTime": {
            "time": "06:30"
          },
          "endOfLate": {
            "time": "07:30"
          },
          "startTime": "01:00",
          "endTime": "17:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetTransferAgencyMf",
    "source": "SSTAMF",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSMERCERMF_CUSTODY",
      "securityIdType": "SSMERCERMF_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "ROW_TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "Account Number"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Fund ID"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Fund Cusip Number"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "Filler"
      },
      {
        "columnOrdinal": 7,
        "columnName": "units",
        "originalColumnName": "Current Shares Balance"
      },
      {
        "columnOrdinal": 8,
        "columnName": "valuationDate",
        "originalColumnName": "Date"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "Price Cycle"
      },
      {
        "columnOrdinal": 10,
        "columnName": "price",
        "originalColumnName": "NAV"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler5",
        "originalColumnName": "DealerNumber"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler6",
        "originalColumnName": "Branch Number"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler7",
        "originalColumnName": "RepNumber"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler8",
        "originalColumnName": "RepName"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler9",
        "originalColumnName": "AdvisorNumber"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler10",
        "originalColumnName": "AdvisorName"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler11",
        "originalColumnName": "SSNorTIN"
      },
      {
        "columnOrdinal": 18,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Current Dollar Balance"
      },
      {
        "columnOrdinal": 19,
        "columnName": "securityCurrency",
        "originalColumnName": "Currency"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler12",
        "originalColumnName": "DealerAccountNumber"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler13",
        "originalColumnName": "Shareholder Name Line 1"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler14",
        "originalColumnName": "Shareholder Name Line 2"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler15",
        "originalColumnName": "Shareholder Name Line 3"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler16",
        "originalColumnName": "Shareholder Name Line 4"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler17",
        "originalColumnName": "Customer Name"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler18",
        "originalColumnName": "Fund Name"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler19",
        "originalColumnName": "Filler1"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler20",
        "originalColumnName": "Inception Date"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler21",
        "originalColumnName": "Current Physical Share Balance"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler22",
        "originalColumnName": "Dividend Option"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler23",
        "originalColumnName": "STCG Option"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler24",
        "originalColumnName": "LTCG Option"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler25",
        "originalColumnName": "Filler2"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler26",
        "originalColumnName": "Filler3"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler27",
        "originalColumnName": "Filler4"
      },
      {
        "columnOrdinal": 36,
        "columnName": "filler28",
        "originalColumnName": "Filler5"
      },
      {
        "columnOrdinal": 37,
        "columnName": "filler29",
        "originalColumnName": "Filler6"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler30",
        "originalColumnName": "Sub- account Custom Field 1"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler31",
        "originalColumnName": "Sub- account Custom Field 2"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler32",
        "originalColumnName": "Sub- account Custom Field 3"
      },
      {
        "columnOrdinal": 41,
        "columnName": "filler33",
        "originalColumnName": "Sub- account Custom Field 4"
      },
      {
        "columnOrdinal": 42,
        "columnName": "filler34",
        "originalColumnName": "Global Asset Allocation Model Name"
      },
      {
        "columnOrdinal": 43,
        "columnName": "filler35",
        "originalColumnName": "Account Type Code"
      },
      {
        "columnOrdinal": 44,
        "columnName": "filler36",
        "originalColumnName": "Account Type Name"
      },
      {
        "columnOrdinal": 45,
        "columnName": "filler37",
        "originalColumnName": "Settled Shares"
      },
      {
        "columnOrdinal": 46,
        "columnName": "filler38",
        "originalColumnName": "Market Value of Settled Shares"
      },
      {
        "columnOrdinal": 47,
        "columnName": "filler39",
        "originalColumnName": "Daily Dividend Accrual Per Share"
      },
      {
        "columnOrdinal": 48,
        "columnName": "filler40",
        "originalColumnName": "Accrued Dividend Amount"
      },
      {
        "columnOrdinal": 49,
        "columnName": "filler41",
        "originalColumnName": "Cumulative Accrued Dividend Amount"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5a4",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetTransferAgency",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "SS_MERCER_TA_POS_*.txt",
    "fileFormat": "fixedWidthDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "01:00"
          },
          "endOfOnTime": {
            "time": "06:30"
          },
          "endOfLate": {
            "time": "07:30"
          },
          "startTime": "01:00",
          "endTime": "17:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetTransferAgency",
    "source": "SSTA",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSMERCERTA_CUSTODY",
      "securityIdType": "SSMERCERTA_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "ROW_TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "Account Number"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Fund ID"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Fund Cusip Number"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "Filler"
      },
      {
        "columnOrdinal": 7,
        "columnName": "units",
        "originalColumnName": "Current Shares Balance"
      },
      {
        "columnOrdinal": 8,
        "columnName": "valuationDate",
        "originalColumnName": "Date"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "Price Cycle"
      },
      {
        "columnOrdinal": 10,
        "columnName": "price",
        "originalColumnName": "NAV"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler5",
        "originalColumnName": "DealerNumber"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler6",
        "originalColumnName": "Branch Number"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler7",
        "originalColumnName": "RepNumber"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler8",
        "originalColumnName": "RepName"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler9",
        "originalColumnName": "AdvisorNumber"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler10",
        "originalColumnName": "AdvisorName"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler11",
        "originalColumnName": "SSNorTIN"
      },
      {
        "columnOrdinal": 18,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Current Dollar Balance"
      },
      {
        "columnOrdinal": 19,
        "columnName": "securityCurrency",
        "originalColumnName": "Currency"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler12",
        "originalColumnName": "DealerAccountNumber"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler13",
        "originalColumnName": "Shareholder Name Line 1"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler14",
        "originalColumnName": "Shareholder Name Line 2"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler15",
        "originalColumnName": "Shareholder Name Line 3"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler16",
        "originalColumnName": "Shareholder Name Line 4"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler17",
        "originalColumnName": "Customer Name"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler18",
        "originalColumnName": "Fund Name"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler19",
        "originalColumnName": "Filler1"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler20",
        "originalColumnName": "Inception Date"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler21",
        "originalColumnName": "Current Physical Share Balance"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler22",
        "originalColumnName": "Dividend Option"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler23",
        "originalColumnName": "STCG Option"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler24",
        "originalColumnName": "LTCG Option"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler25",
        "originalColumnName": "Filler2"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler26",
        "originalColumnName": "Filler3"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler27",
        "originalColumnName": "Filler4"
      },
      {
        "columnOrdinal": 36,
        "columnName": "filler28",
        "originalColumnName": "Filler5"
      },
      {
        "columnOrdinal": 37,
        "columnName": "filler29",
        "originalColumnName": "Filler6"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler30",
        "originalColumnName": "Sub- account Custom Field 1"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler31",
        "originalColumnName": "Sub- account Custom Field 2"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler32",
        "originalColumnName": "Sub- account Custom Field 3"
      },
      {
        "columnOrdinal": 41,
        "columnName": "filler33",
        "originalColumnName": "Sub- account Custom Field 4"
      },
      {
        "columnOrdinal": 42,
        "columnName": "filler34",
        "originalColumnName": "Global Asset Allocation Model Name"
      },
      {
        "columnOrdinal": 43,
        "columnName": "filler35",
        "originalColumnName": "Account Type Code"
      },
      {
        "columnOrdinal": 44,
        "columnName": "filler36",
        "originalColumnName": "Account Type Name"
      },
      {
        "columnOrdinal": 45,
        "columnName": "filler37",
        "originalColumnName": "Settled Shares"
      },
      {
        "columnOrdinal": 46,
        "columnName": "filler38",
        "originalColumnName": "Market Value of Settled Shares"
      },
      {
        "columnOrdinal": 47,
        "columnName": "filler39",
        "originalColumnName": "Daily Dividend Accrual Per Share"
      },
      {
        "columnOrdinal": 48,
        "columnName": "filler40",
        "originalColumnName": "Accrued Dividend Amount"
      },
      {
        "columnOrdinal": 49,
        "columnName": "filler41",
        "originalColumnName": "Cumulative Accrued Dividend Amount"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5b0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "jpMorgan",
    "fileType": "positions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "JPMC_Holdings_*.csv",
    "fileFormat": "csvTabDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/UTC",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "08:00"
          },
          "endOfOnTime": {
            "time": "09:00"
          },
          "endOfLate": {
            "time": "11:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "jpMorgan",
    "source": "JPM",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy.MM.dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "JPM_CUSTODY",
      "securityIdType": "JPM_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "valuationDate",
        "originalColumnName": "Reference Date"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "Account Number"
      },
      {
        "columnOrdinal": 4,
        "columnName": "accountCurrency",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 5,
        "columnName": "typeOfHolding",
        "originalColumnName": "Type Of Holding"
      },
      {
        "columnOrdinal": 6,
        "columnName": "instrumentTypeDescription",
        "originalColumnName": "Instrument Type Description"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler1",
        "originalColumnName": "Instrument Short Name"
      },
      {
        "columnOrdinal": 8,
        "columnName": "ISIN",
        "originalColumnName": "ISIN"
      },
      {
        "columnOrdinal": 9,
        "columnName": "securityCurrency",
        "originalColumnName": "Currency of Instrument"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler2",
        "originalColumnName": "FX Buying Ccy"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler3",
        "originalColumnName": "FX Selling Ccy"
      },
      {
        "columnOrdinal": 12,
        "columnName": "units",
        "originalColumnName": "Quantity"
      },
      {
        "columnOrdinal": 13,
        "columnName": "price",
        "originalColumnName": "Price"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler4",
        "originalColumnName": "Position To Base FX Rate"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler5",
        "originalColumnName": "Buy To Base FX Rate"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler6",
        "originalColumnName": "Sell To Base FX Rate"
      },
      {
        "columnOrdinal": 17,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Market Value"
      },
      {
        "columnOrdinal": 18,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Base Market Value"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler7",
        "originalColumnName": "FX Buy Amount"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler8",
        "originalColumnName": "FX Sell Amount"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler9",
        "originalColumnName": "FX Buy Amount in Base"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler10",
        "originalColumnName": "FX Sell Amount in Base"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler11",
        "originalColumnName": "Accrued Interest"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler12",
        "originalColumnName": "Maturity Date"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler13",
        "originalColumnName": "Start Date"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler14",
        "originalColumnName": "Interest Rate"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler15",
        "originalColumnName": "FX Deal Rate"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler16",
        "originalColumnName": "Last FX Rate"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler17",
        "originalColumnName": "Account Name"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler18",
        "originalColumnName": "IBAN"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler19",
        "originalColumnName": "Full Account Number"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler20",
        "originalColumnName": "Instrument Type Code"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler21",
        "originalColumnName": "Instrument Long Name"
      },
      {
        "columnOrdinal": 34,
        "columnName": "valoren",
        "originalColumnName": "Valoren"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler22",
        "originalColumnName": "Valoren Suffix"
      },
      {
        "columnOrdinal": 36,
        "columnName": "CUSIP",
        "originalColumnName": "CUSIP"
      },
      {
        "columnOrdinal": 37,
        "columnName": "SEDOL",
        "originalColumnName": "SEDOL"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler23",
        "originalColumnName": "Bloomberg Ticker"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler24",
        "originalColumnName": "Base Price"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler25",
        "originalColumnName": "Date of Price"
      },
      {
        "columnOrdinal": 41,
        "columnName": "filler26",
        "originalColumnName": "Base Accrued Interest"
      },
      {
        "columnOrdinal": 42,
        "columnName": "filler27",
        "originalColumnName": "Average Cost Amount"
      },
      {
        "columnOrdinal": 43,
        "columnName": "filler28",
        "originalColumnName": "Average Cost Price"
      },
      {
        "columnOrdinal": 44,
        "columnName": "filler29",
        "originalColumnName": "Average Cost Amount in Base"
      },
      {
        "columnOrdinal": 45,
        "columnName": "filler30",
        "originalColumnName": "Average Cost Price in Base"
      },
      {
        "columnOrdinal": 46,
        "columnName": "filler31",
        "originalColumnName": "Average Bought Amount"
      },
      {
        "columnOrdinal": 47,
        "columnName": "filler32",
        "originalColumnName": "Average Bought Price"
      },
      {
        "columnOrdinal": 48,
        "columnName": "filler33",
        "originalColumnName": "Average Bought Amount in Base"
      },
      {
        "columnOrdinal": 49,
        "columnName": "filler34",
        "originalColumnName": "Average Bought Price in Base"
      },
      {
        "columnOrdinal": 50,
        "columnName": "filler35",
        "originalColumnName": "Country of Instrument"
      },
      {
        "columnOrdinal": 51,
        "columnName": "filler36",
        "originalColumnName": "Exchange Rate Date"
      },
      {
        "columnOrdinal": 52,
        "columnName": "filler37",
        "originalColumnName": "Income Currency"
      },
      {
        "columnOrdinal": 53,
        "columnName": "filler38",
        "originalColumnName": "Income Frequency"
      },
      {
        "columnOrdinal": 54,
        "columnName": "filler39",
        "originalColumnName": "Date of Last Income"
      },
      {
        "columnOrdinal": 55,
        "columnName": "filler40",
        "originalColumnName": "Marketplace"
      },
      {
        "columnOrdinal": 56,
        "columnName": "filler41",
        "originalColumnName": "Asset Classification 1"
      },
      {
        "columnOrdinal": 57,
        "columnName": "filler42",
        "originalColumnName": "Asset Classification 2"
      },
      {
        "columnOrdinal": 58,
        "columnName": "filler43",
        "originalColumnName": "Asset Classification 3"
      },
      {
        "columnOrdinal": 59,
        "columnName": "filler44",
        "originalColumnName": "Current Face"
      },
      {
        "columnOrdinal": 60,
        "columnName": "filler45",
        "originalColumnName": "Factor"
      },
      {
        "columnOrdinal": 61,
        "columnName": "filler46",
        "originalColumnName": "Custodian ID"
      },
      {
        "columnOrdinal": 62,
        "columnName": "filler47",
        "originalColumnName": "Custodian Name"
      },
      {
        "columnOrdinal": 63,
        "columnName": "filler48",
        "originalColumnName": "FX rate platform ccy"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy.MM.dd",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [
      "616449bea08a5c401affb629",
      "61644c19a08a5c401affb634"
    ],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609044a5c75ea3005b2fd5f0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "bnp",
    "fileType": "positions",
    "entityType": "fund",
    "region": "international",
    "country": "various",
    "fileMask": "BNP_Positions*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/mmccorp_mdo_dev2/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47110d7f91f",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/UTC",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "08:00"
          },
          "endOfOnTime": {
            "time": "08:30"
          },
          "endOfLate": {
            "time": "21:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "anastasiya.pavlova@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "anastasiya.pavlova@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "anastasiya.pavlova@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "bnp",
    "source": "BNP",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "BNP_CUSTODY",
      "securityIdType": "BNP_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "ACCOUNT ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "ACCOUNT NAME"
      },
      {
        "columnOrdinal": 4,
        "columnName": "accountCurrency",
        "originalColumnName": "ACCOUNT CURRENCY"
      },
      {
        "columnOrdinal": 5,
        "columnName": "valuationDate",
        "originalColumnName": "VALUATION DATE"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler2",
        "originalColumnName": "TOTAL VALUE"
      },
      {
        "columnOrdinal": 7,
        "columnName": "securityId",
        "originalColumnName": "SECURITY ID"
      },
      {
        "columnOrdinal": 8,
        "columnName": "securityIdType",
        "originalColumnName": "SECURITY ID TYPE"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler3",
        "originalColumnName": "SECURITY NAME"
      },
      {
        "columnOrdinal": 10,
        "columnName": "securityCurrency",
        "originalColumnName": "SECURITY CURRENCY"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler4",
        "originalColumnName": "SECURITY TYPE"
      },
      {
        "columnOrdinal": 12,
        "columnName": "units",
        "originalColumnName": "UNITS/NOMINAL"
      },
      {
        "columnOrdinal": 13,
        "columnName": "price",
        "originalColumnName": "PRICE"
      },
      {
        "columnOrdinal": 14,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "MARKET VALUE SECURITY CURRENCY"
      },
      {
        "columnOrdinal": 15,
        "columnName": "marketValueBaseCurrency",
        "originalColumnName": "MARKET VALUE BASE CURRENCY"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler5",
        "originalColumnName": "ACCRUED INCOME"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "maxLength": 8,
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "Y",
        "maxLength": 3,
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "maxLength": 12,
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "Y",
        "maxLength": 3,
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "maxLength": 12,
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "maxLength": 8,
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609047a5c78ea3005b2fd5c0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "aewCapitalManagement",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "AEW_POSITIONS_*.xls",
    "fileFormat": "xlsFileValueFund",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Etc/UTC",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "isBusinessDay": true,
          "startDay": 1,
          "endOfOnSchedule": {
            "day": 1,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 14,
            "time": "18:00"
          },
          "endOfLate": {
            "day": 15,
            "time": "18:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "anastasiya.pavlova@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "anastasiya.pavlova@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "aewCapitalManagement",
    "source": "AEW",
    "valuationDate": {
      "isExists": false,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "AEW_CUSTODY",
      "securityIdType": "AEW_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "Account Name"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "Account Number"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Security ID"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Beginning Balance"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "Value"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "Value1"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler5",
        "originalColumnName": "Management Fees"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler6",
        "originalColumnName": "Unrealized Gain/Loss"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler7",
        "originalColumnName": "LT Realized Gain/Loss"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler8",
        "originalColumnName": "ST Realized Gain/Loss"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler9",
        "originalColumnName": "Dividend Income"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler10",
        "originalColumnName": "Interest Income"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler11",
        "originalColumnName": "Expenses excluding management fee"
      },
      {
        "columnOrdinal": 15,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Ending Balance"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler12",
        "originalColumnName": "Allocation%"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609047a5c78ea3005b2fd5f0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetFundAccounting",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "GLB_US_ME_POS_15*.txt",
    "fileFormat": "csvPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/Chicago",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "isBusinessDay": true,
          "startDay": 15,
          "endOfOnSchedule": {
            "day": 15,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 1,
            "time": "18:00"
          },
          "endOfLate": {
            "day": 5,
            "time": "18:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetFundAccounting",
    "source": "SSFAGLB",
    "valuationDate": {
      "isExists": false,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSFA_CUSTODY",
      "securityIdType": "SSFA_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "TYPE",
        "originalColumnName": "TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "FUND_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler2",
        "originalColumnName": "FFC_IND"
      },
      {
        "columnOrdinal": 5,
        "columnName": "securityId",
        "originalColumnName": "ACCOUNT"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "ACCOUNT_DESC"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "BASIS_IND"
      },
      {
        "columnOrdinal": 8,
        "columnName": "accountCurrency",
        "originalColumnName": "CRNCY_CD_BASE"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler5",
        "originalColumnName": "CRNCY_CD_FIN"
      },
      {
        "columnOrdinal": 10,
        "columnName": "securityCurrency",
        "originalColumnName": "CRNCY_CD_LOC"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler6",
        "originalColumnName": "NAV_BAL_IND"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler7",
        "originalColumnName": "CD_DATE"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler8",
        "originalColumnName": "CD_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler9",
        "originalColumnName": "CD_BEG_BAL"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "CD_END_BAL_D_C"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "CD_END_BAL"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "PD_DATE"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler13",
        "originalColumnName": "PD_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler14",
        "originalColumnName": "PD_BEG_BAL"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler15",
        "originalColumnName": "PD_END_BAL_D_C"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler16",
        "originalColumnName": "PD_END_BAL"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler17",
        "originalColumnName": "PM_BEG_DATE"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler18",
        "originalColumnName": "PM_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler19",
        "originalColumnName": "PM_BEG_BAL"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler20",
        "originalColumnName": "PM_END_DATE"
      },
      {
        "columnOrdinal": 26,
        "columnName": "PM_END_BAL_D_C",
        "originalColumnName": "PM_END_BAL_D_C"
      },
      {
        "columnOrdinal": 27,
        "columnName": "PM_END_BAL",
        "originalColumnName": "PM_END_BAL"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler21",
        "originalColumnName": "PY_BEG_DATE"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler22",
        "originalColumnName": "PY_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler23",
        "originalColumnName": "PY_BEG_BAL"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler24",
        "originalColumnName": "PY_END_DATE"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler25",
        "originalColumnName": "PY_END_BAL_D_C"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler26",
        "originalColumnName": "PY_END_BAL"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler27",
        "originalColumnName": "NAV_DATE"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler28",
        "originalColumnName": "NAV_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 36,
        "columnName": "filler29",
        "originalColumnName": "NAV_BEG_BAL"
      },
      {
        "columnOrdinal": 37,
        "columnName": "filler30",
        "originalColumnName": "NAV_END_BAL_D_C"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler31",
        "originalColumnName": "NAV_END_BAL"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler32",
        "originalColumnName": "REAL_MEMO_IND"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler33",
        "originalColumnName": "AVG_ID_CST_IND"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "609084a5c75ea3005a2fd5f0",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "jpMorgan",
    "fileType": "transactions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "JPMC_Transaction*.csv",
    "fileFormat": "csvTabDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Transactions_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "08:00"
          },
          "endOfOnTime": {
            "time": "09:00"
          },
          "endOfLate": {
            "time": "10:00"
          },
          "startTime": "08:00",
          "endTime": "11:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_PreprocessTransactionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "preProcessTransactionsFile",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessTransactionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "jpMorgan",
    "source": "JPM",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy.MM.dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "JPM_CUSTODY",
      "securityIdType": "JPM_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "transactions",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "From Date"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "To Date"
      },
      {
        "columnOrdinal": 4,
        "columnName": "accountId",
        "originalColumnName": "Account Number"
      },
      {
        "columnOrdinal": 5,
        "columnName": "typeOfTransaction",
        "originalColumnName": "Type Of Transaction"
      },
      {
        "columnOrdinal": 6,
        "columnName": "instrumentTypeDescription",
        "originalColumnName": "Instrument Type Description"
      },
      {
        "columnOrdinal": 7,
        "columnName": "transactionId",
        "originalColumnName": "Transaction Number"
      },
      {
        "columnOrdinal": 8,
        "columnName": "transactionType",
        "originalColumnName": "Olympic Transaction Code"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler2",
        "originalColumnName": "Transaction Description"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler3",
        "originalColumnName": "Instrument Short Name"
      },
      {
        "columnOrdinal": 11,
        "columnName": "ISIN",
        "originalColumnName": "ISIN"
      },
      {
        "columnOrdinal": 12,
        "columnName": "securityCurrency",
        "originalColumnName": "Transaction Currency"
      },
      {
        "columnOrdinal": 13,
        "columnName": "transactionQuantity",
        "originalColumnName": "Quantity"
      },
      {
        "columnOrdinal": 14,
        "columnName": "tradeDate",
        "originalColumnName": "Trade Date"
      },
      {
        "columnOrdinal": 15,
        "columnName": "settlementDate",
        "originalColumnName": "Value Date"
      },
      {
        "columnOrdinal": 16,
        "columnName": "price",
        "originalColumnName": "Transaction Price"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler4",
        "originalColumnName": "Transaction To Base FX Rate"
      },
      {
        "columnOrdinal": 18,
        "columnName": "costLocal",
        "originalColumnName": "Net Transaction Amount"
      },
      {
        "columnOrdinal": 19,
        "columnName": "costBase",
        "originalColumnName": "Net Transaction Amount in Base"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler5",
        "originalColumnName": "Accrued Interest"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler6",
        "originalColumnName": "Interest Rate"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler7",
        "originalColumnName": "Gross Transaction Amount"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler8",
        "originalColumnName": "Ex Date"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler9",
        "originalColumnName": "Dividend/Coupon Rate"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler10",
        "originalColumnName": "Full Account Number"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler11",
        "originalColumnName": "IBAN"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler12",
        "originalColumnName": "Account Name"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler13",
        "originalColumnName": "Instrument Type Code"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler14",
        "originalColumnName": "Instrument Long Name"
      },
      {
        "columnOrdinal": 30,
        "columnName": "Valoren",
        "originalColumnName": "Valoren"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler15",
        "originalColumnName": "Valoren Suffix"
      },
      {
        "columnOrdinal": 32,
        "columnName": "CUSIP",
        "originalColumnName": "CUSIP"
      },
      {
        "columnOrdinal": 33,
        "columnName": "SEDOL",
        "originalColumnName": "SEDOL"
      },
      {
        "columnOrdinal": 34,
        "columnName": "Ticker",
        "originalColumnName": "Ticker"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler16",
        "originalColumnName": "Pricing Currency"
      },
      {
        "columnOrdinal": 36,
        "columnName": "filler17",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 37,
        "columnName": "filler18",
        "originalColumnName": "Price in Base Currency"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler19",
        "originalColumnName": "Accrued Interest in Base"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler20",
        "originalColumnName": "Brokerage Fees"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler21",
        "originalColumnName": "Counterparty Fees"
      },
      {
        "columnOrdinal": 41,
        "columnName": "filler22",
        "originalColumnName": "JPM Brokerage Fees"
      },
      {
        "columnOrdinal": 42,
        "columnName": "filler23",
        "originalColumnName": "JPM Fees"
      },
      {
        "columnOrdinal": 43,
        "columnName": "filler24",
        "originalColumnName": "Swiss Tax"
      },
      {
        "columnOrdinal": 44,
        "columnName": "filler25",
        "originalColumnName": "Withholding Tax"
      },
      {
        "columnOrdinal": 45,
        "columnName": "cashCurrency",
        "originalColumnName": "Cash Currency"
      },
      {
        "columnOrdinal": 46,
        "columnName": "cashAmount",
        "originalColumnName": "Cash Amount"
      },
      {
        "columnOrdinal": 47,
        "columnName": "filler26",
        "originalColumnName": "Counterparty Name"
      },
      {
        "columnOrdinal": 48,
        "columnName": "filler27",
        "originalColumnName": "Reversal Flag"
      },
      {
        "columnOrdinal": 49,
        "columnName": "filler28",
        "originalColumnName": "Reversal Reference"
      },
      {
        "columnOrdinal": 50,
        "columnName": "filler29",
        "originalColumnName": "Marketplace"
      },
      {
        "columnOrdinal": 51,
        "columnName": "filler30",
        "originalColumnName": "Asset Classification 1"
      },
      {
        "columnOrdinal": 52,
        "columnName": "filler31",
        "originalColumnName": "Asset Classification 2"
      },
      {
        "columnOrdinal": 53,
        "columnName": "filler32",
        "originalColumnName": "Asset Classification 3"
      },
      {
        "columnOrdinal": 54,
        "columnName": "filler33",
        "originalColumnName": "Current Face"
      },
      {
        "columnOrdinal": 55,
        "columnName": "filler34",
        "originalColumnName": "Factor"
      },
      {
        "columnOrdinal": 56,
        "columnName": "filler35",
        "originalColumnName": "Maturity Date"
      },
      {
        "columnOrdinal": 57,
        "columnName": "filler36",
        "originalColumnName": "Payable Date"
      },
      {
        "columnOrdinal": 58,
        "columnName": "filler37",
        "originalColumnName": "Contract ID"
      },
      {
        "columnOrdinal": 59,
        "columnName": "filler38",
        "originalColumnName": "FX rate platform ccy"
      }
    ],
    "validations": [
      {
        "validationName": "TransactionIdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "TransactionID",
        "validationField": "Eagle Validation",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Duplication",
            "error": "Duplicate Transaction ID",
            "message": "Duplicated Transaction ID already in Eagle",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "TransactionTypeValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "TransactionCode",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Transaction Type code in source file does not match xRef in Eagle",
            "message": "Transaction code not identified in Eagle",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionCancellationValidation",
        "runStatus": "N",
        "validationCategory": "",
        "validationType": "Cancellation",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "costBaseDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "",
        "validationType": "Cost Base",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "costLocalDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Data Validation",
        "validationType": "DataFormat",
        "validationField": "Cost Local",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Cost Local",
            "message": "Trade Proceeds - Security Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Cost Local format is incorrect for 'value'",
            "message": "Trade Proceeds - Security Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "TransactionID",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Transaction ID",
            "message": "Transaction ID is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy.MM.dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionQuantityDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Trade Quantity",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Trade Quantity",
            "message": "Transaction Quantity is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Trade Quantity format is incorrect for 'value'",
            "message": "Transaction Quantity format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "TransactionCode",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Transaction Type code",
            "message": "Transaction Type is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "tradeDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy.MM.dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Trade Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Trade Date format is incorrect for 'value'",
            "message": "Trade Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Trade Date is a future date",
            "message": "Trade Date is a future date'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "settlementDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy.MM.dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Settlement Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Settlement Date format is incorrect for 'value'",
            "message": "Settlement Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Settlement Date is a future date",
            "message": "Settlement Date is a future date",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [
      "616449bea08a5c401affb629",
      "61644c19a08a5c401affb634"
    ],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "60f00bf25bdf1dab26f9b060",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetFundAccounting",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "GLB_US_ME_POS_8*.txt",
    "fileFormat": "csvPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c4",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/Chicago",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "isBusinessDay": true,
          "startDay": 8,
          "endOfOnSchedule": {
            "day": 8,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 13,
            "time": "18:00"
          },
          "endOfLate": {
            "day": 18,
            "time": "18:00"
          },
          "startTime": "05:00",
          "endTime": "00:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetFundAccounting",
    "source": "SSFAGLB",
    "valuationDate": {
      "isExists": false,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SSFA_CUSTODY",
      "securityIdType": "SSFA_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "TYPE",
        "originalColumnName": "TYPE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "FUND_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler2",
        "originalColumnName": "FFC_IND"
      },
      {
        "columnOrdinal": 5,
        "columnName": "securityId",
        "originalColumnName": "ACCOUNT"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "ACCOUNT_DESC"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "BASIS_IND"
      },
      {
        "columnOrdinal": 8,
        "columnName": "accountCurrency",
        "originalColumnName": "CRNCY_CD_BASE"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler5",
        "originalColumnName": "CRNCY_CD_FIN"
      },
      {
        "columnOrdinal": 10,
        "columnName": "securityCurrency",
        "originalColumnName": "CRNCY_CD_LOC"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler6",
        "originalColumnName": "NAV_BAL_IND"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler7",
        "originalColumnName": "CD_DATE"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler8",
        "originalColumnName": "CD_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler9",
        "originalColumnName": "CD_BEG_BAL"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "CD_END_BAL_D_C"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "CD_END_BAL"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "PD_DATE"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler13",
        "originalColumnName": "PD_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler14",
        "originalColumnName": "PD_BEG_BAL"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler15",
        "originalColumnName": "PD_END_BAL_D_C"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler16",
        "originalColumnName": "PD_END_BAL"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler17",
        "originalColumnName": "PM_BEG_DATE"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler18",
        "originalColumnName": "PM_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler19",
        "originalColumnName": "PM_BEG_BAL"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler20",
        "originalColumnName": "PM_END_DATE"
      },
      {
        "columnOrdinal": 26,
        "columnName": "PM_END_BAL_D_C",
        "originalColumnName": "PM_END_BAL_D_C"
      },
      {
        "columnOrdinal": 27,
        "columnName": "PM_END_BAL",
        "originalColumnName": "PM_END_BAL"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler21",
        "originalColumnName": "PY_BEG_DATE"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler22",
        "originalColumnName": "PY_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler23",
        "originalColumnName": "PY_BEG_BAL"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler24",
        "originalColumnName": "PY_END_DATE"
      },
      {
        "columnOrdinal": 32,
        "columnName": "filler25",
        "originalColumnName": "PY_END_BAL_D_C"
      },
      {
        "columnOrdinal": 33,
        "columnName": "filler26",
        "originalColumnName": "PY_END_BAL"
      },
      {
        "columnOrdinal": 34,
        "columnName": "filler27",
        "originalColumnName": "NAV_DATE"
      },
      {
        "columnOrdinal": 35,
        "columnName": "filler28",
        "originalColumnName": "NAV_BEG_BAL_D_C"
      },
      {
        "columnOrdinal": 36,
        "columnName": "filler29",
        "originalColumnName": "NAV_BEG_BAL"
      },
      {
        "columnOrdinal": 37,
        "columnName": "filler30",
        "originalColumnName": "NAV_END_BAL_D_C"
      },
      {
        "columnOrdinal": 38,
        "columnName": "filler31",
        "originalColumnName": "NAV_END_BAL"
      },
      {
        "columnOrdinal": 39,
        "columnName": "filler32",
        "originalColumnName": "REAL_MEMO_IND"
      },
      {
        "columnOrdinal": 40,
        "columnName": "filler33",
        "originalColumnName": "AVG_ID_CST_IND"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "611a69768699cfd5d32d8649",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "northernTrust",
    "fileType": "positions",
    "entityType": "account",
    "region": "pacific",
    "country": "australia",
    "fileMask": "MER_InvestorHoldingsPeriod_*.csv",
    "fileFormat": "csvCommaDelimitedWithFooter",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "611a67ad8699cfd5d32d84fb",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "startDay": 1,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "00:01",
          "endTime": "23:59",
          "endOfOnTime": {
            "day": 28,
            "time": "22:00"
          },
          "endOfLate": {
            "day": 28,
            "time": "22:15"
          },
          "endOfOnSchedule": {
            "day": 1,
            "time": "19:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "northernTrustAustralia",
    "source": "Northern Trust (Australia)",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd/MM/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "NTAUS_CUSTODY",
      "securityIdType": "NTAUS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "Trust Group Code"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler2",
        "originalColumnName": "Trust Group"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": " Trust Code"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler3",
        "originalColumnName": "Trust Name"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountId",
        "originalColumnName": "Account Number"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "Account Name"
      },
      {
        "columnOrdinal": 8,
        "columnName": "accountType",
        "originalColumnName": "Account Type"
      },
      {
        "columnOrdinal": 9,
        "columnName": "valuationDate",
        "originalColumnName": "Date"
      },
      {
        "columnOrdinal": 10,
        "columnName": "units",
        "originalColumnName": "Units"
      },
      {
        "columnOrdinal": 11,
        "columnName": "price",
        "originalColumnName": "Price"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler5",
        "originalColumnName": "Price Date"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler6",
        "originalColumnName": "Is Ex Price"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler7",
        "originalColumnName": "PriceType"
      },
      {
        "columnOrdinal": 15,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Value"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler8",
        "originalColumnName": "% of Fund Held"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd/MM/yyyy",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "611bb7148699cfd5d32e692a",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "bnpParibasNewZealand",
    "fileType": "positions",
    "entityType": "account",
    "region": "pacific",
    "country": "newZealand",
    "fileMask": "BNPPSS_MERCERNZ01_DUnitPrices1_*.zip",
    "fileFormat": "csvZippedFile",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "startDay": 1,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "13:30",
          "endTime": "23:59",
          "endOfOnTime": {
            "day": 28,
            "time": "17:20"
          },
          "endOfLate": {
            "day": 28,
            "time": "18:30"
          },
          "endOfOnSchedule": {
            "day": 1,
            "time": "13:30"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "bnpParibasNewZealand",
    "source": "BNP Paribas (New Zealand)",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd/MM/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "BNPNZ_CUSTODY",
      "securityIdType": "BNPNZ_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "securityId",
        "originalColumnName": "BNP Code"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "Fund Name"
      },
      {
        "columnOrdinal": 4,
        "columnName": "accountId",
        "originalColumnName": "InvestorID"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Total Units On Issue"
      },
      {
        "columnOrdinal": 6,
        "columnName": "units",
        "originalColumnName": "Investor Units Held"
      },
      {
        "columnOrdinal": 7,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 8,
        "columnName": "price",
        "originalColumnName": "Base Price"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler3",
        "originalColumnName": "Entry Price"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler4",
        "originalColumnName": "Exit Price"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler5",
        "originalColumnName": "Taxable Income"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler6",
        "originalColumnName": "Foreign Tax Credits"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler7",
        "originalColumnName": "Imputation Credits"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler8",
        "originalColumnName": "Dividend Withholding Payments"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler9",
        "originalColumnName": "Resident Withholding Tax"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd/MM/yyyy",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "6127684905dbe7bf9510df70",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "milestonePControl",
    "fileType": "positions",
    "entityType": "account",
    "region": "pacific",
    "country": "australia",
    "fileMask": "Mercer_AUST_Allocation_Report_D_*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [
      {
        "_id": "61277bd60d0184b733192b15",
        "topic": "invokeUOIProcessing"
      }
    ],
    "holidayCalendarId": "6127656105dbe7bf9510dc2e",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "startDay": 1,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "00:01",
          "endTime": "23:59",
          "endOfOnTime": {
            "day": 28,
            "time": "19:00"
          },
          "endOfLate": {
            "day": 28,
            "time": "19:55"
          },
          "endOfOnSchedule": {
            "day": 1,
            "time": "17:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "milestonePControlAust",
    "source": "PControlAU",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    "eagleIdentifiers": {
      "accountIdType": "PALLOCAUS_CUSTODY",
      "securityIdType": "PALLOCAUS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation date"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "Originator"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler1",
        "originalColumnName": "Originator Description"
      },
      {
        "columnOrdinal": 5,
        "columnName": "securityId",
        "originalColumnName": "Counterparty Code"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler2",
        "originalColumnName": "Counterparty Description"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler3",
        "originalColumnName": "Cparty sector"
      },
      {
        "columnOrdinal": 8,
        "columnName": "tgttAssetLocation",
        "originalColumnName": "Target Asset Allocation"
      },
      {
        "columnOrdinal": 9,
        "columnName": "minAllocation",
        "originalColumnName": "Minimum Allocation"
      },
      {
        "columnOrdinal": 10,
        "columnName": "maxAllocation",
        "originalColumnName": "Maximum Allocation"
      },
      {
        "columnOrdinal": 11,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Holding Value"
      },
      {
        "columnOrdinal": 12,
        "columnName": "holdingPercentage",
        "originalColumnName": "Holding Percentage"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler4",
        "originalColumnName": "Cash Allocated"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler5",
        "originalColumnName": "Range Allocation"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler6",
        "originalColumnName": "Dollar Allocation"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler7",
        "originalColumnName": "Originator Product Group"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler8",
        "originalColumnName": "Cparty Product Group"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler9",
        "originalColumnName": "Originator custody code"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler10",
        "originalColumnName": "Cparty custody code"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "Report Timestamp"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "Last Price Date"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd-MMM-yy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61277bd60d0184b733192b05",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "milestonePControl",
    "fileType": "positions",
    "entityType": "account",
    "region": "pacific",
    "country": "newZealand",
    "fileMask": "Mercer_NZ_Allocation_Report_D*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [
      {
        "_id": "61277bd60d0184b733192b25",
        "topic": "invokeUOIProcessing"
      }
    ],
    "holidayCalendarId": "6127802910f2aee0b2578ae1",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "startDay": 1,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "00:01",
          "endTime": "23:59",
          "endOfOnTime": {
            "day": 28,
            "time": "23:00"
          },
          "endOfLate": {
            "day": 28,
            "time": "23:55"
          },
          "endOfOnSchedule": {
            "day": 1,
            "time": "21:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "milestonePControlNz",
    "source": "PControl",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    "eagleIdentifiers": {
      "accountIdType": "PALLOCNZ_CUSTODY",
      "securityIdType": "PALLOCNZ_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation date"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "Originator"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler1",
        "originalColumnName": "Originator Description"
      },
      {
        "columnOrdinal": 5,
        "columnName": "securityId",
        "originalColumnName": "Counterparty Code"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler2",
        "originalColumnName": "Counterparty Description"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler3",
        "originalColumnName": "Cparty sector"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler4",
        "originalColumnName": "Target Asset Allocation"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler5",
        "originalColumnName": "Minimum Allocation"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler6",
        "originalColumnName": "Maximum Allocation"
      },
      {
        "columnOrdinal": 11,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Holding Value"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler7",
        "originalColumnName": "Holding Percentage"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler8",
        "originalColumnName": "Cash Allocated"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler9",
        "originalColumnName": "Range Allocation"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "Dollar Allocation"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "Originator Product Group"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler12",
        "originalColumnName": "Cparty Product Group"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler13",
        "originalColumnName": "Originator custody code"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler14",
        "originalColumnName": "Cparty custody code"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler15",
        "originalColumnName": "Report Timestamp"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd-MMM-yy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61277bd60d0184b733192b15",
    "isEnabled": true,
    "isMaster": false,
    "supplier": "unitsOnIssue",
    "fileType": "positions",
    "entityType": "client",
    "region": "pacific",
    "country": "australia",
    "fileMask": "Units_on_Issue_Reconciliation_Report_(UOI)-_AU*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "UOI_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "canReprocessFile",
        "isEnabled": false
      }
    ],
    "dependencies": [
      {
        "_id": "61277bd60d0184b733192b35",
        "topic": "uploadFilesMetadata"
      }
    ],
    "holidayCalendarId": "6127802910f2aee0b2578ae1",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "day": 1,
            "time": "21:00"
          },
          "endOfOnTime": {
            "day": 5,
            "time": "23:00"
          },
          "endOfLate": {
            "day": 6,
            "time": "23:55"
          },
          "startDay": 1,
          "endDay": 15,
          "startTime": "21:00",
          "endTime": "23:59"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "unitsOnIssueAust",
    "source": "UOI AU",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    "eagleIdentifiers": {
      "accountIdType": "UOIAUS_CUSTODY",
      "securityIdType": "UOIAUS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "PRODNAME"
      },
      {
        "columnOrdinal": 3,
        "columnName": "INVESTNAME",
        "originalColumnName": "INVESTNAME"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "FUNDCO"
      },
      {
        "columnOrdinal": 5,
        "columnName": "SUMIEUNT",
        "originalColumnName": "SUMIEUNT"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler1",
        "originalColumnName": "SUMOFUNT"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler2",
        "originalColumnName": "VARIANCES"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler3",
        "originalColumnName": "PercentDiff"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "Textbox31"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler5",
        "originalColumnName": "Textbox32"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler6",
        "originalColumnName": "Textbox33"
      },
      {
        "columnOrdinal": 12,
        "columnName": "custodianCode",
        "originalColumnName": "CUSTODIAN_CODE"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd-MMM-yy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61277bd60d0184b733192b25",
    "isEnabled": true,
    "isMaster": false,
    "supplier": "unitsOnIssue",
    "fileType": "positions",
    "entityType": "client",
    "region": "pacific",
    "country": "newZealand",
    "fileMask": "Units_on_Issue_Reconciliation_Report_(UOI)-_NZ*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "UOI_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "canReprocessFile",
        "isEnabled": false
      }
    ],
    "dependencies": [
      {
        "_id": "61277bd60d0184b733192b45",
        "topic": "uploadFilesMetadata"
      }
    ],
    "holidayCalendarId": "6127802910f2aee0b2578ae1",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "day": 1,
            "time": "21:00"
          },
          "endOfOnTime": {
            "day": 5,
            "time": "23:00"
          },
          "endOfLate": {
            "day": 6,
            "time": "23:55"
          },
          "startDay": 1,
          "endDay": 15,
          "startTime": "21:00",
          "endTime": "23:59"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "unitsOnIssueNz",
    "source": "UOI NZ",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    "eagleIdentifiers": {
      "accountIdType": "UOINZ_CUSTODY",
      "securityIdType": "UOINZ_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "PRODNAME"
      },
      {
        "columnOrdinal": 3,
        "columnName": "INVESTNAME",
        "originalColumnName": "INVESTNAME"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "FUNDCO"
      },
      {
        "columnOrdinal": 5,
        "columnName": "SUMIEUNT",
        "originalColumnName": "SUMIEUNT"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler1",
        "originalColumnName": "SUMOFUNT"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler2",
        "originalColumnName": "VARIANCES"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler3",
        "originalColumnName": "PercentDiff"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "Textbox31"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler5",
        "originalColumnName": "Textbox32"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler6",
        "originalColumnName": "Textbox33"
      },
      {
        "columnOrdinal": 12,
        "columnName": "custodianCode",
        "originalColumnName": "CUSTODIAN_CODE"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd-MMM-yy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61277bd60d0184b733192b35",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "unitsOnIssue",
    "fileType": "positions",
    "entityType": "client",
    "region": "pacific",
    "country": "australia",
    "fileMask": "Units_on_Issue_Reconciliation_Report_(UOI)-_AU*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "UOI_Upload_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "canReprocessFile",
        "isEnabled": false
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "day": 1,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 15,
            "time": "23:00"
          },
          "endOfLate": {
            "day": 16,
            "time": "23:55"
          },
          "startDay": 1,
          "startTime": "05:00",
          "endTime": "23:59"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "unitsOnIssueAust",
    "source": "UOI AU",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    "eagleIdentifiers": {
      "accountIdType": "PALLOCNZ_CUSTODY",
      "securityIdType": "PALLOCNZ_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [],
    "fieldLocations": [],
    "validations": [],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61277bd60d0184b733192b45",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "unitsOnIssue",
    "fileType": "positions",
    "entityType": "client",
    "region": "pacific",
    "country": "newZealand",
    "fileMask": "Units_on_Issue_Reconciliation_Report_(UOI)-_NZ*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "UOI_Upload_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "canReprocessFile",
        "isEnabled": false
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": false,
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "day": 1,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 15,
            "time": "23:00"
          },
          "endOfLate": {
            "day": 16,
            "time": "23:55"
          },
          "startDay": 1,
          "startTime": "05:00",
          "endTime": "23:59"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "unitsOnIssueNz",
    "source": "UOI NZ",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    "eagleIdentifiers": {
      "accountIdType": "PALLOCNZ_CUSTODY",
      "securityIdType": "PALLOCNZ_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [],
    "fieldLocations": [],
    "validations": [],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61715532a8fb3fb4587eadbc",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "crims",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "canada",
    "fileMask": "mercer_CN_GRID_SA_*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/Toronto",
      "expectedDays": [
        {
          "isBusinessDay": true,
          "startDay": 5,
          "endDay": 5,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "17:00",
          "endTime": "21:00",
          "endOfOnTime": {
            "day": 5,
            "time": "18:30"
          },
          "endOfLate": {
            "day": 5,
            "time": "20:30"
          },
          "endOfOnSchedule": {
            "day": 5,
            "time": "17:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "crimsCanSa",
    "source": "CRIMSCA",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "CRIMS_FUNDID",
      "securityIdType": "CRIMSID",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "valuationDate",
        "originalColumnName": "MARKET_DATE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "BusinessUnit"
      },
      {
        "columnOrdinal": 4,
        "columnName": "accountId",
        "originalColumnName": "ClientAccountId"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "SubBusinessUnit"
      },
      {
        "columnOrdinal": 6,
        "columnName": "securityId",
        "originalColumnName": "SubAccountId"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler3",
        "originalColumnName": "ISOCurrency"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler4",
        "originalColumnName": "Amount"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler5",
        "originalColumnName": "BaseRate"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler6",
        "originalColumnName": "BaseISOCurrency"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler7",
        "originalColumnName": "BaseAmount"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler8",
        "originalColumnName": "AccountRate"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler9",
        "originalColumnName": "AccountISOCurrency"
      },
      {
        "columnOrdinal": 14,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "AccountAmount"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "TransactionDate"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "Field8"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "ClientAccountName"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler13",
        "originalColumnName": "SubAccountName"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy-MM-dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61717d94a8fb3fb4587eadbe",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "crims",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "canada",
    "fileMask": "mercer_CN_GRID_??????.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/Toronto",
      "expectedDays": [
        {
          "isBusinessDay": true,
          "startDay": 5,
          "endDay": 5,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "17:00",
          "endTime": "21:00",
          "endOfOnTime": {
            "day": 5,
            "time": "18:30"
          },
          "endOfLate": {
            "day": 5,
            "time": "20:30"
          },
          "endOfOnSchedule": {
            "day": 5,
            "time": "17:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "crimsCan",
    "source": "CRIMSCA",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "CRIMS_PLANID",
      "securityIdType": "CRIMSID",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "accountBaseCurrency",
      "toCurrency": "securityCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Plan Code"
      },
      {
        "columnOrdinal": 3,
        "columnName": "securityId",
        "originalColumnName": "Fund Code"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler1",
        "originalColumnName": "Client Number"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Custodian Account Number"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "Country Code"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "Client Name"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler5",
        "originalColumnName": "Account name"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler6",
        "originalColumnName": "ISIN Number"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler7",
        "originalColumnName": "Mercer Fund Name"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler8",
        "originalColumnName": "Fund Asset Class"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler9",
        "originalColumnName": "Fund Umbrella"
      },
      {
        "columnOrdinal": 13,
        "columnName": "securityCurrency",
        "originalColumnName": "Share Class Currency"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler10",
        "originalColumnName": "AUM Opening Balance"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler11",
        "originalColumnName": "AUM Exchange In"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler12",
        "originalColumnName": "AUM Exchange Out"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler13",
        "originalColumnName": "AUM Purchase"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler14",
        "originalColumnName": "AUM Redemption"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler15",
        "originalColumnName": "AUM New Business Funding"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler16",
        "originalColumnName": "FULL Liquidation"
      },
      {
        "columnOrdinal": 21,
        "columnName": "marketValueBaseCurrency",
        "originalColumnName": "AUM Closing Balance"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler17",
        "originalColumnName": "AUM Opening Units Held"
      },
      {
        "columnOrdinal": 23,
        "columnName": "units",
        "originalColumnName": "AUM Closing Units Held"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler18",
        "originalColumnName": "REVPORT CODE"
      },
      {
        "columnOrdinal": 25,
        "columnName": "valuationDate",
        "originalColumnName": "Previous Date"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler19",
        "originalColumnName": "Previous-Previous Date"
      },
      {
        "columnOrdinal": 27,
        "columnName": "FEED_CODE",
        "originalColumnName": "Feed Code"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationErrors": []
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy-MM-dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61769e6b45fdd153a40f4ea8",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "milestonePControl",
    "fileType": "performance",
    "entityType": "portfolioBB",
    "region": "pacific",
    "country": "australia",
    "fileMask": "PQUANT_Performance_AU_*.zip",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "ZIP_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": true
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "611a67ad8699cfd5d32d84fb",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "isBusinessDay": true,
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "day": 10,
            "time": "05:00"
          },
          "endOfOnTime": {
            "day": 11,
            "time": "05:00"
          },
          "endOfLate": {
            "day": 12,
            "time": "23:59"
          },
          "startDay": 10,
          "startTime": "05:00",
          "endTime": "23:59"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS_ZipFile",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_PreprocessQuiverFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "preProcessZipFile",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPerformanceFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "dmitriy.volkov@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "dmitriy.volkov@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "milestonePControlAust",
    "source": "Pquant",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "PALLOCAUS_CUSTODY",
      "securityIdType": "PALLOCAUS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "performance",
        "isEnabled": true
      }
    ],
    "fieldLocations": [],
    "validations": [
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "matchNotFoundDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Data Validation",
        "validationType": "DataFormat",
        "validationField": "Matching Record",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Matching Record not found in 3E file",
            "message": "Matching Record not found in 3E file",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Matching Record not found in 4E file",
            "message": "Matching Record not found in 4E file",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Portfolio ID",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security ID",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "startWeightPortfolioDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Portfolio Weight (Start)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Wp (start)",
            "message": "Portfolio Weight (Start) is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Wp (start) should be a numeric value",
            "message": "Portfolio Weight (Start) is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "endWeightPortfolioDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Portfolio Weight (End)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Wp (end)",
            "message": "Portfolio Weight (End) is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Wp (end) should be a numeric value",
            "message": "Portfolio Weight (End) is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "portfolioReturnDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Portfolio Return",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Rp (Base)",
            "message": "Portfolio Return is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Rp (Base) should be a numeric value",
            "message": "Portfolio Return is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "startWeightBenchmarkDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Benchmark Weight (Start)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Wb (start)",
            "message": "Benchmark Weight (Start) is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Wb (start) should be a numeric value",
            "message": "Benchmark Weight (Start) is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "effectiveDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd-MMM-yyyy",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Effective Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Effective Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Effective Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Effective Date is a future date",
            "message": "Effective Date is a future date",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "endWeightBenchmarkDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Benchmark Weight (End)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Wb (end)",
            "message": "Benchmark Weight (End) is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Wb (end) should be a numeric value",
            "message": "Benchmark Weight (End) is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "benchmarkReturnDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Benchmark Return",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Rb (Base)",
            "message": "Benchmark Return is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Rb (Base) should be a numeric value",
            "message": "Benchmark Return is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "activeReturnDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Active Return",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Rp - Rb (Base)",
            "message": "Active Return is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Rp - Rb (Base) should be a numeric value",
            "message": "Active Return is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "arithmeticExcessReturnDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Rpa - Rba (Base)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Rpa - Rba (Base)",
            "message": "Rpa - Rba (Base) is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Rpa - Rba (Base) should be a numeric value",
            "message": "Rpa - Rba (Base) is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "contributiontoPortfolioReturnDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Contribution to Portfolio Return",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Cp (Base)",
            "message": "Contribution to Portfolio Return is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Cp (Base) should be a numeric value",
            "message": "Contribution to Portfolio Return is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "contributiontoBenchmarkReturnDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Contribution to Benchmark Return",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Cb (Base)",
            "message": "Contribution to Benchmark Return is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Cb (Base) should be a numeric value",
            "message": "Contribution to Benchmark Return is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "assetAllocationBaseDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Asset Allocation",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Asset Allocation (Base)",
            "message": "Asset Allocation is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Asset Allocation (Base) should be a numeric value",
            "message": "Asset Allocation is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "stockSelectionBaseDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Stock Allocation",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Stock Selection (Base)",
            "message": "Stock Allocation is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Stock Selection (Base) should be a numeric value",
            "message": "Stock Allocation is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "interactionBaseDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Interaction",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Interaction (Base)",
            "message": "Interaction is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Interaction (Base) should be a numeric value",
            "message": "Interaction is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "activeManagementBaseDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?%",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Active Management (Total Attribution)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Active Management (Base)",
            "message": "Active Management (Total Attribution) is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Active Management (Base) should be a numeric value",
            "message": "Active Management (Total Attribution) is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "61826c48601b513912f11bde",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "crims",
    "fileType": "positions",
    "entityType": "subAdvisor",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "mercer_US_GRID_SA_*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "isBusinessDay": true,
          "startDay": 5,
          "endDay": 5,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "17:00",
          "endTime": "21:00",
          "endOfOnTime": {
            "day": 5,
            "time": "18:30"
          },
          "endOfLate": {
            "day": 5,
            "time": "20:30"
          },
          "endOfOnSchedule": {
            "day": 5,
            "time": "17:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "crimsUSSa",
    "source": "CRIMSUS",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "CRIMS_FUNDID",
      "securityIdType": "CRIMSID",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "valuationDate",
        "originalColumnName": "MARKET_DATE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "BusinessUnit"
      },
      {
        "columnOrdinal": 4,
        "columnName": "accountId",
        "originalColumnName": "ClientAccountId"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "SubBusinessUnit"
      },
      {
        "columnOrdinal": 6,
        "columnName": "securityId",
        "originalColumnName": "SubAccountId"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler3",
        "originalColumnName": "ISOCurrency"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler4",
        "originalColumnName": "Amount"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler5",
        "originalColumnName": "BaseRate"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler6",
        "originalColumnName": "BaseISOCurrency"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler7",
        "originalColumnName": "BaseAmount"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler8",
        "originalColumnName": "AccountRate"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler9",
        "originalColumnName": "AccountISOCurrency"
      },
      {
        "columnOrdinal": 14,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "AccountAmount"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "TransactionDate"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "Field8"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "ClientAccountName"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler13",
        "originalColumnName": "SubAccountName"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy-MM-dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61827084e14de485ff057d2b",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "crims",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "mercer_US_GRID_??????.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Non_Daily_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "ContinuousMonthly",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "isBusinessDay": true,
          "startDay": 5,
          "endDay": 5,
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "17:00",
          "endTime": "21:00",
          "endOfOnTime": {
            "day": 5,
            "time": "18:30"
          },
          "endOfLate": {
            "day": 5,
            "time": "20:30"
          },
          "endOfOnSchedule": {
            "day": 5,
            "time": "17:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "crimsUS",
    "source": "CRIMSUS",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy-MM-dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "CRIMS_FUNDID",
      "securityIdType": "CRIMSID",
      "aggregationIdType": "CRIMS_PLANID",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Plan Code"
      },
      {
        "columnOrdinal": 3,
        "columnName": "securityId",
        "originalColumnName": "Fund Code"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler1",
        "originalColumnName": "Client Number"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Custodian Account Number"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler3",
        "originalColumnName": "Country Code"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "Client Name"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler5",
        "originalColumnName": "Account name"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler6",
        "originalColumnName": "ISIN Number"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler7",
        "originalColumnName": "Mercer Fund Name"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler8",
        "originalColumnName": "Fund Asset Class"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler9",
        "originalColumnName": "Fund Umbrella"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler10",
        "originalColumnName": "Share Class Currency"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler11",
        "originalColumnName": "AUM Opening Balance"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler12",
        "originalColumnName": "AUM Exchange In"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler13",
        "originalColumnName": "AUM Exchange Out"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler14",
        "originalColumnName": "AUM Purchase"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler15",
        "originalColumnName": "AUM Redemption"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler16",
        "originalColumnName": "AUM New Business Funding"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler17",
        "originalColumnName": "FULL Liquidation"
      },
      {
        "columnOrdinal": 21,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "AUM Closing Balance"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler18",
        "originalColumnName": "AUM Opening Units Held"
      },
      {
        "columnOrdinal": 23,
        "columnName": "units",
        "originalColumnName": "AUM Closing Units Held"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler19",
        "originalColumnName": "REVPORT CODE"
      },
      {
        "columnOrdinal": 25,
        "columnName": "valuationDate",
        "originalColumnName": "Previous Date"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler20",
        "originalColumnName": "Previous-Previous Date"
      },
      {
        "columnOrdinal": 27,
        "columnName": "FEED_CODE",
        "originalColumnName": "Feed Code"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "aggregateIdXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationErrors": []
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyy-MM-dd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6197589a9c6d3bbe1ded79e6",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "citiBank",
    "fileType": "positions",
    "entityType": "securityHoldingInformation",
    "region": "pacific",
    "country": "australia",
    "fileMask": "odcmercer_cgmaPositionsCOB_transitions_mercer_*.csv",
    "fileFormat": "csvCommaDelimitedWith7Footers",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Weekly",
      "timeZone": "Australia/Sydney",
      "expectedDays": [
        {
          "dayOfTheWeek": "Tuesday",
          "startTime": "04:00",
          "endTime": "23:59",
          "endOfOnTime": {
            "time": "07:00"
          },
          "endOfOnSchedule": {
            "time": "07:00"
          },
          "endOfLate": {
            "time": "09:00"
          }
        },
        {
          "dayOfTheWeek": "Wednesday",
          "startTime": "04:00",
          "endTime": "23:59",
          "endOfOnTime": {
            "time": "07:00"
          },
          "endOfOnSchedule": {
            "time": "07:00"
          },
          "endOfLate": {
            "time": "09:00"
          }
        },
        {
          "dayOfTheWeek": "Thursday",
          "startTime": "04:00",
          "endTime": "23:59",
          "endOfOnTime": {
            "time": "07:00"
          },
          "endOfOnSchedule": {
            "time": "07:00"
          },
          "endOfLate": {
            "time": "09:00"
          }
        },
        {
          "dayOfTheWeek": "Friday",
          "startTime": "04:00",
          "endTime": "23:59",
          "endOfOnTime": {
            "time": "07:00"
          },
          "endOfOnSchedule": {
            "time": "07:00"
          },
          "endOfLate": {
            "time": "09:00"
          }
        },
        {
          "dayOfTheWeek": "Saturday",
          "startTime": "04:00",
          "endTime": "23:59",
          "endOfOnTime": {
            "time": "07:00"
          },
          "endOfOnSchedule": {
            "time": "07:00"
          },
          "endOfLate": {
            "time": "09:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "citiBank",
    "source": "CITIAUS",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd/MM/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "CITIAUS_CUSTODY",
      "securityIdType": "BBTICKER",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "A/C Ref"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "A/C Name"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler2",
        "originalColumnName": "Exchange"
      },
      {
        "columnOrdinal": 5,
        "columnName": "type",
        "originalColumnName": "Type"
      },
      {
        "columnOrdinal": 6,
        "columnName": "securityName",
        "originalColumnName": "Contract"
      },
      {
        "columnOrdinal": 7,
        "columnName": "securityId",
        "originalColumnName": "CFOBBG"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler3",
        "originalColumnName": "bbgYellowKey"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "RIC"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler5",
        "originalColumnName": "Contract Symbol"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler6",
        "originalColumnName": "Delivery"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler7",
        "originalColumnName": "Call/Put"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler8",
        "originalColumnName": "Strike"
      },
      {
        "columnOrdinal": 14,
        "columnName": "long",
        "originalColumnName": "Long"
      },
      {
        "columnOrdinal": 15,
        "columnName": "short",
        "originalColumnName": "Short"
      },
      {
        "columnOrdinal": 16,
        "columnName": "units",
        "originalColumnName": "Net"
      },
      {
        "columnOrdinal": 17,
        "columnName": "avgLongPrice",
        "originalColumnName": "Average Long Price"
      },
      {
        "columnOrdinal": 18,
        "columnName": "avgShortPrice",
        "originalColumnName": "Average Short Price"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler9",
        "originalColumnName": "Price Type Ind"
      },
      {
        "columnOrdinal": 20,
        "columnName": "basePrice",
        "originalColumnName": "Sett Price"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler10",
        "originalColumnName": "Curr"
      },
      {
        "columnOrdinal": 22,
        "columnName": "openTradeEquity",
        "originalColumnName": "Open Trade Equity"
      },
      {
        "columnOrdinal": 23,
        "columnName": "optionValuation",
        "originalColumnName": "Option Valuation"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler11",
        "originalColumnName": "Intraday Change"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler12",
        "originalColumnName": "US EST Timestamp"
      },
      {
        "columnOrdinal": 26,
        "columnName": "fxRateAUD",
        "originalColumnName": "FX Rate to AUD"
      },
      {
        "columnOrdinal": 27,
        "columnName": "filler13",
        "originalColumnName": "Point Value"
      },
      {
        "columnOrdinal": 28,
        "columnName": "derivativesExposure",
        "originalColumnName": "Notional Value"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler14",
        "originalColumnName": "LTD"
      },
      {
        "columnOrdinal": 30,
        "columnName": "valuationDate",
        "originalColumnName": "COB"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "isReadOnly": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "masterFileLevelValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CitiFooterRowCountValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FooterRowCount",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Mismatch of footer row count",
            "message": "Rows Returned doesn't match the number of rows between the header and the footer",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Currency",
            "message": "Security Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency format is incorrect for 'value'",
            "message": "Security Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format  is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "basePriceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Base Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd/MM/yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format  is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "derivativeExposureDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Derivative Exposure",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Derivative Exposure",
            "message": "Derivative Exposure is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Derivative Exposure Format is incorrect for 'value'",
            "message": "Derivative Exposure Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "averagePriceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Average Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Average Price",
            "message": "Average Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Average Price Format is incorrect for 'value'",
            "message": "Average Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "fxRteDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "FX Rate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing FX Rate",
            "message": "FX Rate is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "FX Rate Format is incorrect for 'value'",
            "message": "FX Rate Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6197589a9c6d3bbe1ded79e7",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "positions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_AFT_DATA*.csv",
    "fileFormat": "ctaCSVPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47110d7f944",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfOnSchedule": {
            "time": "15:30"
          },
          "endOfLate": {
            "time": "16:30"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustody",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "EXECUTION_SS",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Composite ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Holding Id"
      },
      {
        "columnOrdinal": 5,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Market Value Base"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountCurrency",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Market Value Local"
      },
      {
        "columnOrdinal": 8,
        "columnName": "securityCurrency",
        "originalColumnName": "Local Currency"
      },
      {
        "columnOrdinal": 9,
        "columnName": "holdingType",
        "originalColumnName": "Holding Type"
      },
      {
        "columnOrdinal": 10,
        "columnName": "units",
        "originalColumnName": "Units/Nominal"
      },
      {
        "columnOrdinal": 11,
        "columnName": "price",
        "originalColumnName": "Price"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6197589a9c6d3bbe1ded79e8",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "positions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_AFT_OPENTRADES*.XLSX",
    "fileFormat": "xlsFile",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "specificSheetName",
        "isEnabled": true,
        "accountName": "MRC_AFT_OPENTRADES_"
      },
      {
        "action": "setCustomEmptyFileStatus",
        "isEnabled": true,
        "accountName": "successWithNoOutput"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47110d7f944",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfOnSchedule": {
            "time": "15:30"
          },
          "endOfLate": {
            "time": "16:30"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustodyOpenTrade",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "EXECUTION_SS",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Fund"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "Security Long Name"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler2",
        "originalColumnName": "CUSIP Number"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler3",
        "originalColumnName": "Open Trade Currency"
      },
      {
        "columnOrdinal": 6,
        "columnName": "transactionType",
        "originalColumnName": "Transaction Type"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler4",
        "originalColumnName": "Shares/Par Value"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler5",
        "originalColumnName": "Base Unit Price"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler6",
        "originalColumnName": "Base Net Proceed Amount"
      },
      {
        "columnOrdinal": 10,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Base Current Value"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler7",
        "originalColumnName": "Base Unrealized Gain"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler8",
        "originalColumnName": "Trade Date"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler9",
        "originalColumnName": "Contractual Settlement Date"
      },
      {
        "columnOrdinal": 14,
        "columnName": "securityCurrency",
        "originalColumnName": "Settlement Currency Code"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler10",
        "originalColumnName": "Settlement Location"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler11",
        "originalColumnName": "Broker Name"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler12",
        "originalColumnName": "Broker Code"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler13",
        "originalColumnName": "Trade ID"
      },
      {
        "columnOrdinal": 19,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Local Net Proceed Amount"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler14",
        "originalColumnName": "Local Unit Price"
      },
      {
        "columnOrdinal": 21,
        "columnName": "valuationDate",
        "originalColumnName": "Period End Date"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency  is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type  is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format  is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format  is incorrect for 'value'",
            "message": "Units format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "custodianMarketValueBaseCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Custodian Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Custodian Market Value Base Currency",
            "message": "Custodian Market Value Base Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Custodian Market Value Base Currency format is incorrect for 'value'",
            "message": "Custodian Market Value Base Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format  is incorrect for 'value'",
            "message": "Effective Date format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [
      "619f8ab6d98c78007c5aa724",
      "619f8ac1fc1c4700777d87c4",
      "619f8accd98c78007c5aa728",
      "619f8ad0d98c78007c5aa72f"
    ],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6197589a9c6d3bbe1ded79e9",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "transactions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_AFT_TXN*.txt",
    "fileFormat": "fixedWidthDelimitedCtaTransactions",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Transactions_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47110d7f944",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfOnSchedule": {
            "time": "15:30"
          },
          "endOfLate": {
            "time": "16:30"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_PreprocessTransactionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "preProcessTransactionsFile",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessTransactionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustody",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "EXECUTION_SS",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "transactions",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "FUND_ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "assetId",
        "originalColumnName": "ASSET_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "altAssetIdTypeCD1",
        "originalColumnName": "ALT_ASSET_ID_TYPE_CD1"
      },
      {
        "columnOrdinal": 5,
        "columnName": "altAssetId1z",
        "originalColumnName": "ALT_ASSET_ID1Z"
      },
      {
        "columnOrdinal": 6,
        "columnName": "altAssetIdTypeCD2",
        "originalColumnName": "ALT_ASSET_ID_TYPE_CD2"
      },
      {
        "columnOrdinal": 7,
        "columnName": "altAssetId2",
        "originalColumnName": "ALT_ASSET_ID2"
      },
      {
        "columnOrdinal": 8,
        "columnName": "transactionId",
        "originalColumnName": "SSB_TRD_ID_NUM"
      },
      {
        "columnOrdinal": 9,
        "columnName": "SSB_TRD_ID_Num_Cncl",
        "originalColumnName": "SSB_TRD_ID_NUM_CNCL"
      },
      {
        "columnOrdinal": 10,
        "columnName": "tradeDate",
        "originalColumnName": "TRD_DT"
      },
      {
        "columnOrdinal": 11,
        "columnName": "transactionType",
        "originalColumnName": "TXN_TYPE_CD"
      },
      {
        "columnOrdinal": 12,
        "columnName": "valuationDate",
        "originalColumnName": "POST_DT"
      },
      {
        "columnOrdinal": 13,
        "columnName": "settlementDate",
        "originalColumnName": "CNTRCTL_SETTLE_DT"
      },
      {
        "columnOrdinal": 14,
        "columnName": "transactionQuantity",
        "originalColumnName": "SHRPAR_QTY"
      },
      {
        "columnOrdinal": 15,
        "columnName": "mcrNumber",
        "originalColumnName": "FUND_REF_NUM"
      },
      {
        "columnOrdinal": 16,
        "columnName": "cnclInd",
        "originalColumnName": "CNCL_IND"
      },
      {
        "columnOrdinal": 17,
        "columnName": "costBase",
        "originalColumnName": "NET_BAM"
      },
      {
        "columnOrdinal": 18,
        "columnName": "costLocal",
        "originalColumnName": "NET_LAM"
      },
      {
        "columnOrdinal": 19,
        "columnName": "price",
        "originalColumnName": "UNTPRC_LAM"
      },
      {
        "columnOrdinal": 20,
        "columnName": "securityCurrency",
        "originalColumnName": "SETTLE_CRNCY_CD"
      }
    ],
    "validations": [
      {
        "validationName": "TransactionIdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "TransactionID",
        "validationField": "Eagle Validation",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Duplication",
            "error": "Duplicated Transaction ID already in Eagle",
            "message": "Duplicated Transaction ID already in Eagle",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "TransactionTypeValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "TransactionCode",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Transaction Type code in source file does not match xRef in Eagle",
            "message": "Transaction code not identified in Eagle",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionCancellationValidation",
        "runStatus": "Y",
        "validationCategory": "",
        "validationType": "Cancellation",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "costBaseDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "",
        "validationType": "Cost Base",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "costLocalDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Data Validation",
        "validationType": "DataFormat",
        "validationField": "Cost Local",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Cost Local",
            "message": "Trade Proceeds - Security Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Cost Local format is incorrect for 'value'",
            "message": "Trade Proceeds - Security Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "TransactionID",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Transaction ID",
            "message": "Transaction ID is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionQuantityDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Trade Quantity",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Trade Quantity",
            "message": "Transaction Quantity is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Trade Quantity format is incorrect for 'value'",
            "message": "Transaction Quantity format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "TransactionCode",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Transaction Type code",
            "message": "Transaction Type is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "tradeDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Trade Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Trade Date format is incorrect for 'value'",
            "message": "Trade Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Trade Date is a future date",
            "message": "Trade Date is a future date'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "settlementDateDataValidation",
        "runStatus": "N",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Settlement Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Settlement Date format is incorrect for 'value'",
            "message": "Settlement Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Settlement Date is a future date",
            "message": "Settlement Date is a future date",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [
      "619f8ab6d98c78007c5aa724",
      "619f8ac1fc1c4700777d87c4",
      "619f8accd98c78007c5aa728",
      "619f8ad0d98c78007c5aa72f"
    ],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6197589a9c6d3bbe1ded79ea",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "universal",
    "fileType": "positions",
    "entityType": "subIm",
    "region": "international",
    "country": "various",
    "fileMask": "MCR_UNIVERSAL_POSITIONS_*.xlsx",
    "fileFormat": "xlsFile",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47220d7f945",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "14:00",
          "endTime": "18:00",
          "endOfOnTime": {
            "time": "14:30"
          },
          "endOfOnSchedule": {
            "time": "14:00"
          },
          "endOfLate": {
            "time": "17:15"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "universal",
    "source": "Universal",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "UNIVERSAL",
      "securityIdType": "",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Fund number"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "Fund"
      },
      {
        "columnOrdinal": 4,
        "columnName": "currencyFund",
        "originalColumnName": "Currency Fund"
      },
      {
        "columnOrdinal": 5,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 6,
        "columnName": "NAV",
        "originalColumnName": "NAV"
      },
      {
        "columnOrdinal": 7,
        "columnName": "ISIN",
        "originalColumnName": "ISIN"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler2",
        "originalColumnName": "Security"
      },
      {
        "columnOrdinal": 9,
        "columnName": "currency",
        "originalColumnName": "Currency"
      },
      {
        "columnOrdinal": 10,
        "columnName": "assetLevel1",
        "originalColumnName": "Asset Level I"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler3",
        "originalColumnName": "Asset Level II"
      },
      {
        "columnOrdinal": 12,
        "columnName": "quantity",
        "originalColumnName": "Quantity"
      },
      {
        "columnOrdinal": 13,
        "columnName": "price",
        "originalColumnName": "Price"
      },
      {
        "columnOrdinal": 14,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Market Value (loc)"
      },
      {
        "columnOrdinal": 15,
        "columnName": "marketValueBaseCurrency",
        "originalColumnName": "Market Value (Ref.)"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler4",
        "originalColumnName": "Accrued Interest (local)"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "N",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61bc98b9557d7555fe2971cc",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "investran",
    "fileType": "positions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "Investran_Positions_PIP_*.xls",
    "fileFormat": "xlsFile",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47110d7f91f",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "18:30",
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "18:00"
          },
          "endOfOnSchedule": {
            "time": "15:30"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "investranPip",
    "source": "investran",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "INVESTRAN",
      "securityIdType": "INVESTRAN",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "Report Run Date"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Report As Of"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Legal Entity"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Legal Entity PACE ID"
      },
      {
        "columnOrdinal": 6,
        "columnName": "securityCurrency",
        "originalColumnName": "Legal Entity Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler3",
        "originalColumnName": "LE Grouping"
      },
      {
        "columnOrdinal": 8,
        "columnName": "accountId",
        "originalColumnName": "Specific Investor ID"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "Investor"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler5",
        "originalColumnName": "Investor PACE ID"
      },
      {
        "columnOrdinal": 11,
        "columnName": "accountCurrency",
        "originalColumnName": "Investor Currency"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler6",
        "originalColumnName": "Investor Type - TO BE UPDATED"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler7",
        "originalColumnName": "PCAP Investor name"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler8",
        "originalColumnName": "Investor Administrators' ID"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler9",
        "originalColumnName": "Administrator"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler10",
        "originalColumnName": "Custodian"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler11",
        "originalColumnName": "Share Class"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler12",
        "originalColumnName": "CEP (Webcas Code)"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler13",
        "originalColumnName": "First Closing Investor"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler14",
        "originalColumnName": "Commitment (in investor currency)"
      },
      {
        "columnOrdinal": 21,
        "columnName": "totalCost",
        "originalColumnName": "Total Cost (in investor currency)"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler15",
        "originalColumnName": "Thereof Contributions Inside Commitment (in investor currency)"
      },
      {
        "columnOrdinal": 23,
        "columnName": "totalDistributions",
        "originalColumnName": "Total Distributions (in investor currency)"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler16",
        "originalColumnName": "Recallable Distributions (in investor currency)"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler17",
        "originalColumnName": "Unfunded (in investor currency)"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler18",
        "originalColumnName": "Valuation (in investor currency)"
      },
      {
        "columnOrdinal": 27,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Adjusted Valuation(in investor currency)"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler19",
        "originalColumnName": "IRR Adjusted (in investor currency)"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler20",
        "originalColumnName": "% Funded (in investor currency)"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler21",
        "originalColumnName": "% Unfunded (in investor currency)"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler22",
        "originalColumnName": "Non-Recallable Distribution % (in investor currency)"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency  is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type  is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format  is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format  is incorrect for 'value'",
            "message": "Units format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format  is incorrect for 'value'",
            "message": "Effective Date format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61c062d9557d7555fe2971d3",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "investran",
    "fileType": "positions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "Investran_Positions_PIP2_*.xls",
    "fileFormat": "xlsFile",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47110d7f91f",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "18:30",
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "18:00"
          },
          "endOfOnSchedule": {
            "time": "15:30"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "pjotrs.pavlovs@mmc.com",
          "pjotrs.pavlovs@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "investranPip2",
    "source": "investran",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "MM/dd/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "INVESTRAN",
      "securityIdType": "INVESTRAN",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "Report Run Date"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Report As Of"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Legal Entity"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler2",
        "originalColumnName": "Legal Entity PACE ID"
      },
      {
        "columnOrdinal": 6,
        "columnName": "securityCurrency",
        "originalColumnName": "Legal Entity Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler3",
        "originalColumnName": "LE Grouping"
      },
      {
        "columnOrdinal": 8,
        "columnName": "accountId",
        "originalColumnName": "Specific Investor ID"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "Investor"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler5",
        "originalColumnName": "Investor PACE ID"
      },
      {
        "columnOrdinal": 11,
        "columnName": "accountCurrency",
        "originalColumnName": "Investor Currency"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler6",
        "originalColumnName": "Investor Type - TO BE UPDATED"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler7",
        "originalColumnName": "PCAP Investor name"
      },
      {
        "columnOrdinal": 14,
        "columnName": "filler8",
        "originalColumnName": "Investor Administrators' ID"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler9",
        "originalColumnName": "Administrator"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler10",
        "originalColumnName": "Custodian"
      },
      {
        "columnOrdinal": 17,
        "columnName": "filler11",
        "originalColumnName": "Share Class"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler12",
        "originalColumnName": "CEP (Webcas Code)"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler13",
        "originalColumnName": "First Closing Investor"
      },
      {
        "columnOrdinal": 20,
        "columnName": "filler14",
        "originalColumnName": "Commitment (in investor currency)"
      },
      {
        "columnOrdinal": 21,
        "columnName": "totalCost",
        "originalColumnName": "Total Cost (in investor currency)"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler15",
        "originalColumnName": "Thereof Contributions Inside Commitment (in investor currency)"
      },
      {
        "columnOrdinal": 23,
        "columnName": "totalDistributions",
        "originalColumnName": "Total Distributions (in investor currency)"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler16",
        "originalColumnName": "Recallable Distributions (in investor currency)"
      },
      {
        "columnOrdinal": 25,
        "columnName": "filler17",
        "originalColumnName": "Unfunded (in investor currency)"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler18",
        "originalColumnName": "Valuation (in investor currency)"
      },
      {
        "columnOrdinal": 27,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "Adjusted Valuation(in investor currency)"
      },
      {
        "columnOrdinal": 28,
        "columnName": "filler19",
        "originalColumnName": "IRR Adjusted (in investor currency)"
      },
      {
        "columnOrdinal": 29,
        "columnName": "filler20",
        "originalColumnName": "% Funded (in investor currency)"
      },
      {
        "columnOrdinal": 30,
        "columnName": "filler21",
        "originalColumnName": "% Unfunded (in investor currency)"
      },
      {
        "columnOrdinal": 31,
        "columnName": "filler22",
        "originalColumnName": "Non-Recallable Distribution % (in investor currency)"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "N",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency  is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type  is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format  is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format  is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format  is incorrect for 'value'",
            "message": "Units format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "MM/dd/yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format  is incorrect for 'value'",
            "message": "Effective Date format  is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61c9b67b557d7555fe297213",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "jpMorgan",
    "fileType": "various",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "JPMC_Feed_176_Daily_*.zip",
    "fileFormat": "zipFile",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "File_Upload_Workflow",
    "workflowProcessKey": "successFileSaved",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "canReprocessFile",
        "isEnabled": false
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "12:00",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "12:30"
          },
          "endOfLate": {
            "time": "13:30"
          },
          "endOfOnSchedule": {
            "time": "12:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS_ZipFile",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      }
    ],
    "notification": [],
    "dataValidationType": "jpMorganZip",
    "source": "JPM",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy.MM.dd"
    },
    "eagleIdentifiers": {
      "accountIdType": "JPM_CUSTODY",
      "securityIdType": "JPM_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": false
      }
    ],
    "fieldLocations": [],
    "validations": [],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61f296d9af6941317c1d0275",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "pFaroe",
    "fileType": "positions",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "PF_INSURANCE_UK_*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "specificSheetName",
        "isEnabled": true,
        "accountName": "PF_INSURANCE_UK_"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "61f2a824df9c553b947ee982",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "11:30",
          "endTime": "16:00",
          "endOfOnTime": {
            "time": "12:00"
          },
          "endOfOnSchedule": {
            "time": "12:30"
          },
          "endOfLate": {
            "time": "13:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "pFaroe",
    "source": "PFAROE",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd/MM/yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "CRIMS_INTL",
      "securityIdType": "CRIMS_INTL",
      "isSecurityIdTypeAnArray": false
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "valuationDate",
        "originalColumnName": "EFFECTIVE_DATE"
      },
      {
        "columnOrdinal": 3,
        "columnName": "accountId",
        "originalColumnName": "ACCOUNT_ID"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "SECURITY_ID"
      },
      {
        "columnOrdinal": 5,
        "columnName": "price",
        "originalColumnName": "PRICE"
      },
      {
        "columnOrdinal": 6,
        "columnName": "units",
        "originalColumnName": "QUANTITY"
      },
      {
        "columnOrdinal": 7,
        "columnName": "marketValueSecurityCurrency",
        "originalColumnName": "MV"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency missing in Eagle",
            "message": "Account Currency is missing in Client Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency does not match",
            "message": "Account Currency does not match Client Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency does not match",
            "message": "Security Currency does not match Client Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "dataType": "string",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "N",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd/MM/yyyy",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": -1,
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61f2e472df9c553b947ee983",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "various",
    "entityType": "client",
    "region": "international",
    "country": "various",
    "fileMask": "SecurityMaster_*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "File_Upload_Workflow",
    "workflowProcessKey": "successFileSaved",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": false
      },
      {
        "action": "canReprocessFile",
        "isEnabled": false
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "16:30"
          },
          "endOfOnSchedule": {
            "time": "16:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS_ZipFile",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      }
    ],
    "notification": [],
    "dataValidationType": "stateStreetCustody",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "EXECUTION_SS",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [],
    "fieldLocations": [],
    "validations": [],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "61f3d5b5af523d5a40be8582",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "positions",
    "entityType": "fund",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_FUND_DATA_DAILY_COMPLETE_*.csv",
    "fileFormat": "ctaCSVPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "specificSheetName",
        "isEnabled": true,
        "accountName": "MRC_FUND_DATA_DAILY_COMPLETE_20"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "19:00"
          },
          "endOfOnSchedule": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "20:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustodyFund",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SS_CUSTODY",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Composite ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Holding Id"
      },
      {
        "columnOrdinal": 5,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Market Value Base"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountCurrency",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "marketvalueLocalCurrency",
        "originalColumnName": "Market Value Local"
      },
      {
        "columnOrdinal": 8,
        "columnName": "securityCurrency",
        "originalColumnName": "Local Currency"
      },
      {
        "columnOrdinal": 9,
        "columnName": "holdingType",
        "originalColumnName": "Holding Type"
      },
      {
        "columnOrdinal": 10,
        "columnName": "units",
        "originalColumnName": "Units/Nominal"
      },
      {
        "columnOrdinal": 11,
        "columnName": "price",
        "originalColumnName": "Price"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "N",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6203f65e80fcffa71083213d",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "universal",
    "fileType": "transactions",
    "entityType": "subIm",
    "region": "international",
    "country": "various",
    "fileMask": "DataExport_Transaktionen_Mercer_Type1_UI_*.csv",
    "fileFormat": "csvSemicolonDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Transactions_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "609d488d3413c47220d7f945",
    "schedule": {
      "frequency": "AdHoc",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "14:00"
          },
          "startTime": "13:30",
          "endTime": "17:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_PreprocessTransactionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "preProcessTransactionsFile",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessTransactionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "universal",
    "source": "Universal",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd.MM.yyyy"
    },
    "eagleIdentifiers": {
      "accountIdType": "UNIVERSAL",
      "securityIdType": "",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "accountBaseCurrency",
      "toCurrency": "securityCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "transactions",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Fondsnummer"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler1",
        "originalColumnName": "Fondsname"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler2",
        "originalColumnName": "Fondsnummer Masterfonds"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler3",
        "originalColumnName": "Fondsname Masterfonds"
      },
      {
        "columnOrdinal": 6,
        "columnName": "valuationDate",
        "originalColumnName": "BUCHUNGSDATUM"
      },
      {
        "columnOrdinal": 7,
        "columnName": "tradeDate",
        "originalColumnName": "SCHLUSSTAG"
      },
      {
        "columnOrdinal": 8,
        "columnName": "settlementDate",
        "originalColumnName": "VALUTA"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler4",
        "originalColumnName": "ASSET_LEVEL_I_SORT"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler5",
        "originalColumnName": "ASSET_LEVEL_II"
      },
      {
        "columnOrdinal": 11,
        "columnName": "securityId",
        "originalColumnName": "ISIN"
      },
      {
        "columnOrdinal": 12,
        "columnName": "filler6",
        "originalColumnName": "WERTPAPIERBEZEICHNUNG"
      },
      {
        "columnOrdinal": 13,
        "columnName": "transactionType",
        "originalColumnName": "GA"
      },
      {
        "columnOrdinal": 14,
        "columnName": "securityCurrency",
        "originalColumnName": "WHG"
      },
      {
        "columnOrdinal": 15,
        "columnName": "transactionQuantity",
        "originalColumnName": "NOMINAL_STUECK"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler7",
        "originalColumnName": "KURS_BRUTTO"
      },
      {
        "columnOrdinal": 17,
        "columnName": "price",
        "originalColumnName": "KURS_BRUTTO"
      },
      {
        "columnOrdinal": 18,
        "columnName": "filler8",
        "originalColumnName": "GEBUEHREN"
      },
      {
        "columnOrdinal": 19,
        "columnName": "filler9",
        "originalColumnName": "STUECKZINSEN_FDT_WHG"
      },
      {
        "columnOrdinal": 20,
        "columnName": "costBase",
        "originalColumnName": "AUSMACHENDERBETRAG"
      },
      {
        "columnOrdinal": 21,
        "columnName": "filler10",
        "originalColumnName": "GEWINN_VERLUST"
      },
      {
        "columnOrdinal": 22,
        "columnName": "filler11",
        "originalColumnName": "CONTRACTSIZE"
      },
      {
        "columnOrdinal": 23,
        "columnName": "filler12",
        "originalColumnName": "CNT_LEG"
      },
      {
        "columnOrdinal": 24,
        "columnName": "filler13",
        "originalColumnName": "WHG2"
      },
      {
        "columnOrdinal": 25,
        "columnName": "transactionId",
        "originalColumnName": "TRX_ID"
      },
      {
        "columnOrdinal": 26,
        "columnName": "filler14",
        "originalColumnName": "STORNOCODE"
      }
    ],
    "validations": [
      {
        "validationName": "TransactionIdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "TransactionID",
        "validationField": "Eagle Validation",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Duplication",
            "error": "Duplicate Transaction ID",
            "message": "Duplicated Transaction ID already in Eagle",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "TransactionTypeValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "TransactionCode",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Transaction Type code in source file does not match xRef in Eagle",
            "message": "Transaction code not identified in Eagle",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionCancellationValidation",
        "runStatus": "Y",
        "validationCategory": "",
        "validationType": "Cancellation",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "costBaseDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "",
        "validationType": "Cost Base",
        "isConfigurable": false,
        "validationErrors": []
      },
      {
        "validationName": "costLocalDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Data Validation",
        "validationType": "DataFormat",
        "validationField": "Cost Local",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Cost Local",
            "message": "Trade Proceeds - Security Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Cost Local format is incorrect for 'value'",
            "message": "Trade Proceeds - Security Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "TransactionID",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Transaction ID",
            "message": "Transaction ID is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd.MM.yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionQuantityDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Trade Quantity",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Trade Quantity",
            "message": "Transaction Quantity is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Trade Quantity format is incorrect for 'value'",
            "message": "Transaction Quantity format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "transactionTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "TransactionCode",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Transaction Type code",
            "message": "Transaction Type is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "tradeDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "dd.MM.yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Trade Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Trade Date format is incorrect for 'value'",
            "message": "Trade Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Trade Date is a future date",
            "message": "Trade Date is a future date'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "settlementDateDataValidation",
        "runStatus": "N",
        "dataFormat": "dd.MM.yyyy",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Settlement Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Settlement Date format is incorrect for 'value'",
            "message": "Settlement Date format is incorrect for 'value'",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Settlement Date is a future date",
            "message": "Settlement Date is a future date",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "6213885cd781f322f4569567",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "refinitiv",
    "fileType": "fxRates",
    "entityType": "referenceData",
    "region": "international",
    "country": "various",
    "fileMask": "MercerFX????????_??????*.csv",
    "fileFormat": "csvCommaDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "62138c6baddda6c68f29ef6d",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "endOfOnSchedule": {
            "time": "16:30"
          },
          "endOfOnTime": {
            "time": "17:00"
          },
          "endOfLate": {
            "time": "18:00"
          },
          "startTime": "16:30",
          "endTime": "18:00"
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessFxRatesFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "validation",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "escalationLevel": 1
      },
      {
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com",
          "lev.doronkin@mmc.com"
        ],
        "notificationMethod": "email",
        "notificationKey": "priceNotification",
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "fxRate",
    "source": "Refinitiv",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "dd-MMM-yy"
    },
    
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "fxRates",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "filler1",
        "originalColumnName": "RIC"
      },
      {
        "columnOrdinal": 3,
        "columnName": "filler2",
        "originalColumnName": "Security Description"
      },
      {
        "columnOrdinal": 4,
        "columnName": "filler3",
        "originalColumnName": "Ask Price"
      },
      {
        "columnOrdinal": 5,
        "columnName": "filler4",
        "originalColumnName": "Bid Price"
      },
      {
        "columnOrdinal": 6,
        "columnName": "filler5",
        "originalColumnName": "Last Price"
      },
      {
        "columnOrdinal": 7,
        "columnName": "filler6",
        "originalColumnName": "Last Update Time"
      },
      {
        "columnOrdinal": 8,
        "columnName": "filler7",
        "originalColumnName": "Asset Category Description"
      },
      {
        "columnOrdinal": 9,
        "columnName": "filler8",
        "originalColumnName": "Asset SubType"
      },
      {
        "columnOrdinal": 10,
        "columnName": "filler9",
        "originalColumnName": "Asset SubType Description"
      },
      {
        "columnOrdinal": 11,
        "columnName": "filler10",
        "originalColumnName": "Contributor Short Name"
      },
      {
        "columnOrdinal": 12,
        "columnName": "sourceCurrency",
        "originalColumnName": "Currency Code"
      },
      {
        "columnOrdinal": 13,
        "columnName": "filler11",
        "originalColumnName": "Currency Code Description"
      },
      {
        "columnOrdinal": 14,
        "columnName": "rate",
        "originalColumnName": "Mid Price"
      },
      {
        "columnOrdinal": 15,
        "columnName": "filler12",
        "originalColumnName": "Refinitiv Classification Scheme Description"
      },
      {
        "columnOrdinal": 16,
        "columnName": "filler15",
        "originalColumnName": "Term"
    },
    {
        "columnOrdinal": 17,
        "columnName": "filler16",
        "originalColumnName": "Trade Date"
    },
    {
        "columnOrdinal": 18,
        "columnName": "filler17",
        "originalColumnName": "Universal Ask Price"
    },
    {
        "columnOrdinal": 19,
        "columnName": "filler18",
        "originalColumnName": "Universal Bid Ask Date"
    },
    {
        "columnOrdinal": 20,
        "columnName": "filler19",
        "originalColumnName": "Universal Bid Price"
    },
    {
        "columnOrdinal": 21,
        "columnName": "valuationDate",
        "originalColumnName": "Value Date"
    }
    ],
    "validations": [
      {
        "validationName": "fileFormatValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "Source File",
        "isConfigurable": false,
        "validationErrors": [
            {
                "errorType": "Valid",
                "error": "Incorrect file format",
                "message": "The file is in incorrect format",
                "runStatus": "N"
            }
        ]
    },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateCurrencyValidation",
        "runStatus": "Y",
        "validationCategory": "Data Validation",
        "validationType": "securityCurrency",
        "isConfigurable": false,
        "validationErrors": [
            {
                "errorType": "Missing",
                "error": "Missing To Currency",
                "message": "Currency code not present in Security Master Data",
                "runStatus": "Y"
            }
        ]
    },
    {
      "validationName": "valuationDateDataValidation",
      "runStatus": "Y",
      "dataFormat": "dd-MMM-yy",
      "validationCategory": "Source File Error",
      "validationType": "DataFormat",
      "validationField": "Valuation Date",
      "isConfigurable": false,
      "validationErrors": [
          {
              "errorType": "Missing",
              "error": "Missing Valuation Date",
              "message": "Effective Date is required and is missing",
              "runStatus": "Y"
          },
          {
              "errorType": "Matching",
              "error": "Valuation Date format is incorrect for 'value'",
              "message": "Effective Date format is incorrect for 'value'",
              "runStatus": "Y"
          }
      ]
  },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "To Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing To Currency",
            "message": "Currency Code is required and is missing",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "usdCurrencyDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "To Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Valid",
            "error": "To Currency incorrect",
            "message": "To Currency cannot be USD",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "fxRteDataValidation",
        "runStatus": "Y",
        "dataFormat": "^[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Rate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Rate",
            "message": "Rate is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Rate format is incorrect for 'value'",
            "message": "Rate format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime",
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z"
    }
  },
  {
    "_id": "621435b8ed5fc74e108ed570",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "openFinance",
    "fileType": "positions",
    "entityType": "client",
    "region": "northAmerica",
    "country": "unitedStates",
    "fileMask": "position_mcrview-*.xml",
    "fileFormat": "XML",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "60cc509c50020128e4d028c5",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "America/New_York",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "07:00",
          "endTime": "17:00",
          "endOfOnTime": {
            "time": "08:30"
          },
          "endOfOnSchedule": {
            "time": "07:30"
          },
          "endOfLate": {
            "time": "10:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "OpenFinance",
    "source": "OpenFinance",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyy/MM/dd HH:mm:ss"
    },
    "eagleIdentifiers": {
      "accountIdType": "TBD",
      "securityIdType": "TBD",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [],
    "validations": [],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6214c39f590d4eeb646e2f3a",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "positions",
    "entityType": "fund",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_ALT_FUND_DATA_DAILY_*.csv",
    "fileFormat": "ctaCSVPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "6214c70b590d4eeb646e2f3d",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "19:00"
          },
          "endOfOnSchedule": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "20:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustodyFund",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SS_CUSTODY",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Composite ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Holding Id"
      },
      {
        "columnOrdinal": 5,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Market Value Base"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountCurrency",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "marketvalueLocalCurrency",
        "originalColumnName": "Market Value Local"
      },
      {
        "columnOrdinal": 8,
        "columnName": "securityCurrency",
        "originalColumnName": "Local Currency"
      },
      {
        "columnOrdinal": 9,
        "columnName": "holdingType",
        "originalColumnName": "Holding Type"
      },
      {
        "columnOrdinal": 10,
        "columnName": "units",
        "originalColumnName": "Units/Nominal"
      },
      {
        "columnOrdinal": 11,
        "columnName": "price",
        "originalColumnName": "Price"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "N",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "6217c134590d4eeb646e2f40",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "positions",
    "entityType": "fund",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_FUND_DATA_UKSTOCK_COMPLETE_*.csv",
    "fileFormat": "ctaCSVPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "6217c351590d4eeb646e2f43",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "19:00"
          },
          "endOfOnSchedule": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "20:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustodyFund",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SS_CUSTODY",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Composite ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Holding Id"
      },
      {
        "columnOrdinal": 5,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Market Value Base"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountCurrency",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "marketvalueLocalCurrency",
        "originalColumnName": "Market Value Local"
      },
      {
        "columnOrdinal": 8,
        "columnName": "securityCurrency",
        "originalColumnName": "Local Currency"
      },
      {
        "columnOrdinal": 9,
        "columnName": "holdingType",
        "originalColumnName": "Holding Type"
      },
      {
        "columnOrdinal": 10,
        "columnName": "units",
        "originalColumnName": "Units/Nominal"
      },
      {
        "columnOrdinal": 11,
        "columnName": "price",
        "originalColumnName": "Price"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "N",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  },
  {
    "_id": "62177ef03dba340d2c4239bd",
    "isEnabled": true,
    "isMaster": true,
    "supplier": "stateStreetCustody",
    "fileType": "positions",
    "entityType": "fund",
    "region": "international",
    "country": "various",
    "fileMask": "MRC_FUND_DATA_ENGLUXBANK_COMPLETE_*.csv",
    "fileFormat": "csvPipeDelimited",
    "ftpPath": "sftp://int-tst.mgti.mmc.com/to_mmccorp_mdo_dev2/mmccorp_mdo_dev/",
    "ftpAccountName": "GlobalscapeEagleOutboundSFTP",
    "ftpOutputPath": "sftp://int-tst.mgti.mmc.com/from_mmccorp_mdo_dev/eaglepace/",
    "workflowProcessName": "Default_File_Process_Workflow",
    "workflowProcessKey": "",
    "fileProcessingActions": [
      {
        "action": "previousFileProcessing",
        "isEnabled": false
      },
      {
        "action": "rollDowns",
        "isEnabled": false
      },
      {
        "action": "rollUpsIncludingWeekendAndHoliday",
        "isEnabled": true
      },
      {
        "action": "processSignedFile",
        "isEnabled": false,
        "accountName": "Citi_PGP_SignedDecryptKey"
      },
      {
        "action": "processPgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      },
      {
        "action": "processGgpFile",
        "isEnabled": false,
        "accountName": "MercerMDO_PGP_PrivateKey"
      }
    ],
    "dependencies": [],
    "holidayCalendarId": "62178aa53dba340d2c4239be",
    "schedule": {
      "frequency": "Daily",
      "timeZone": "Etc/GMT",
      "expectedDays": [
        {
          "dayOfTheWeek": "AllWorkDays",
          "startTime": "15:30",
          "endTime": "20:00",
          "endOfOnTime": {
            "time": "19:00"
          },
          "endOfOnSchedule": {
            "time": "16:00"
          },
          "endOfLate": {
            "time": "20:00"
          }
        }
      ]
    },
    "snaplogicTasks": [
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileCreate",
        "camundaTopicName": "createParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ParameterFileDelete",
        "camundaTopicName": "deleteParameterFile"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_LoadFileFromFtpToDS",
        "accountName": "GlobalscapeInboundSFTP",
        "camundaTopicName": "checkSftpFiles"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_ProcessPositionFileFromDS",
        "accountName": "EaglePaceAPI",
        "camundaTopicName": "processFileSnapPipeline",
        "eaglePaceURL": "https://mgi-d003-star.eagleaccess.com/eagle/v2"
      },
      {
        "taskUrl": "TASK_TRGD_MDO_FileToFtpByDocId",
        "camundaTopicName": "sendFileToSftpSnapPipeline"
      }
    ],
    "notification": [
      {
        "notificationMethod": "email",
        "notificationKey": "validation",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@mmc.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      },
      {
        "notificationMethod": "email",
        "notificationKey": "alerts",
        "notificationIds": [
          "kiran.dhage@mercer.com",
          "prabhukumar.a@mercer.com",
          "tagaibek.tolubaev@emergn.com",
          "elena.belomytseva@mmc.com"
        ],
        "escalationLevel": 1
      }
    ],
    "dataValidationType": "stateStreetCustodyFund",
    "source": "SSCUSTODY",
    "valuationDate": {
      "isExists": true,
      "dateFormat": "yyyyMMdd"
    },
    "eagleIdentifiers": {
      "accountIdType": "SS_CUSTODY",
      "securityIdType": "SS_CUSTODY",
      "isSecurityIdTypeAnArray": true
    },
    "fxRatesCalculation": {
      "fromCurrency": "securityCurrency",
      "toCurrency": "accountBaseCurrency"
    },
    "fileProcessIndicators": [
      {
        "fileType": "positions",
        "isEnabled": true
      },
      {
        "fileType": "prices",
        "isEnabled": true
      }
    ],
    "fieldLocations": [
      {
        "columnOrdinal": 1,
        "columnName": "identifier",
        "originalColumnName": "value"
      },
      {
        "columnOrdinal": 2,
        "columnName": "accountId",
        "originalColumnName": "Composite ID"
      },
      {
        "columnOrdinal": 3,
        "columnName": "valuationDate",
        "originalColumnName": "Valuation Date"
      },
      {
        "columnOrdinal": 4,
        "columnName": "securityId",
        "originalColumnName": "Holding Id"
      },
      {
        "columnOrdinal": 5,
        "columnName": "custodianMarketValueBaseCurrency",
        "originalColumnName": "Market Value Base"
      },
      {
        "columnOrdinal": 6,
        "columnName": "accountCurrency",
        "originalColumnName": "Base Currency"
      },
      {
        "columnOrdinal": 7,
        "columnName": "marketvalueLocalCurrency",
        "originalColumnName": "Market Value Local"
      },
      {
        "columnOrdinal": 8,
        "columnName": "securityCurrency",
        "originalColumnName": "Local Currency"
      },
      {
        "columnOrdinal": 9,
        "columnName": "holdingType",
        "originalColumnName": "Holding Type"
      },
      {
        "columnOrdinal": 10,
        "columnName": "units",
        "originalColumnName": "Units/Nominal"
      },
      {
        "columnOrdinal": 11,
        "columnName": "price",
        "originalColumnName": "Price"
      }
    ],
    "validations": [
      {
        "validationName": "AccountCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Currency is missing in Eagle",
            "message": "Eagle Portfolio Currency is missing in Portfolio master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency do not match with what we have in Eagle",
            "message": "Portfolio Currency does not match Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "AccountXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "AccountIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefAccountId from Eagle",
            "message": "Portfolio ID Xref Mapping is missing in Eagle Portfolio Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0.05,
        "validationCategory": "Data Validation",
        "validationType": "Threshold against previous processed file",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Compare num. of valid rows* on previous file x num. of valid rows on current file",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityCurrencyValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityCurrency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Security Currency is missing in Eagle",
            "message": "Eagle Security Currency is missing in Security Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Currency do not match with what we have in Eagle",
            "message": "Security Currency does not match Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "SecurityXrefValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "SecurityIdXref",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing XrefSecurityId from Eagle",
            "message": "Security ID Xref Mapping is missing in Eagle Security Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "DataFormatValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "Master for other DataFormat validations",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "",
            "message": "",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "",
            "message": "",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "FXRateValidation",
        "runStatus": "Y",
        "statusPermissibleValue": -1,
        "errormessagePermissibleValue": 0,
        "validationCategory": "Data Validation",
        "validationType": "FXRate",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Account Base Currency not found on Eagle FX Rates",
            "message": "Account Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          },
          {
            "errorType": "Missing",
            "error": "Security Base Currency not found on Eagle FX Rates",
            "message": "Security Currency is missing in FX Rates Master Data",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "CustodianBaseMarketValueDifferenceValidation",
        "runStatus": "N",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Base Market Value Difference",
        "isConfigurable": true,
        "isSynchronized": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "Base Market Value Difference exceeds thresholdvalue",
            "message": "There is a significant difference in the Base MV provided when compared to the calculated Base MV",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "ThresholdErrorRecordValidation",
        "runStatus": "Y",
        "statusPermissibleValue": 0.01,
        "errormessagePermissibleValue": 0.01,
        "validationCategory": "Data Validation",
        "validationType": "Errored records x Valid records on same file",
        "isConfigurable": true,
        "isSynchronized": true,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "If % higher than \"errormessagePermissibleValue\" value (ex: 0.01 = 1%), then file fails",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "MultiplePriceValidation",
        "runStatus": "Y",
        "validationCategory": "Not in scope - calc/aggregation item",
        "validationType": "Aggregation (by Security ID, Entity ID and Effective Date)",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Matching",
            "error": "New notification sent when aggregated rows have difference in prices",
            "message": "Email notification",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Id",
            "message": "Portfolio ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Id value length should be less or equal 8",
            "message": "Portfolio Id value length should be less than or equal to 8",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "accountCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Account Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Account Currency",
            "message": "Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Account Currency value length should be less or equal 3D",
            "message": "Portfolio Currency value length should be less than or equal to 3",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id",
            "message": "Security ID is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Security Id value length should be less or equal 12",
            "message": "Security Id value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityCurrencyDataValidation",
        "runStatus": "N",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "securityIdTypeDataValidation",
        "runStatus": "Y",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Security Id Type",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Security Id Type",
            "message": "Security Id Type is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "SecurityIdType value length should be less or equal 12",
            "message": "SecurityIdType value length should be less than or equal to 12",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueBaseCurrencyDataValidation",
        "runStatus": "N",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Base Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Base Currency",
            "message": "Market Value Portfolio Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Base Currency format is incorrect for 'value'",
            "message": "Market Value Portfolio Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "marketValueSecurityCurrencyDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Market Value Security Currency",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Market Value Security Currency",
            "message": "Market Value in Local (Security Base) Currency is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Market Value Security Currency format is incorrect for 'value'",
            "message": "Market Value in Local (Security Base) Currency format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "priceDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Price",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Price",
            "message": "Price is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Price Format is incorrect for 'value'",
            "message": "Price Format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "unitsDataValidation",
        "runStatus": "Y",
        "dataFormat": "^-?[0-9]\\d*(\\.\\d+)?$",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Units",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Units",
            "message": "Unit is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Units format is incorrect for 'value'",
            "message": "Units format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      },
      {
        "validationName": "valuationDateDataValidation",
        "runStatus": "Y",
        "dataFormat": "yyyyMMdd",
        "validationCategory": "Source File Error",
        "validationType": "DataFormat",
        "validationField": "Valuation Date",
        "isConfigurable": false,
        "validationErrors": [
          {
            "errorType": "Missing",
            "error": "Missing Valuation Date",
            "message": "Effective Date is required and is missing",
            "runStatus": "Y"
          },
          {
            "errorType": "Matching",
            "error": "Valuation Date format is incorrect for 'value'",
            "message": "Effective Date format is incorrect for 'value'",
            "runStatus": "Y"
          }
        ]
      }
    ],
    "contacts": [],
    "state": {
      "lastProcessTime": "2021-01-01T00:00:00.000Z",
      "lastPollTime": "2021-01-01T00:00:00.000Z",
      "lastFileUploadedTime": "2021-01-01T00:00:00.000Z",
      "processingStatus": "success",
      "errorMessage": "",
      "scheduleStatus": "onTime"
    }
  }
]
